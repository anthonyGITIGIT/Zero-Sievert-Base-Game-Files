function __katspeak_get_gml_interface()
{
    static db = undefined;
    
    if (db == undefined)
    {
        db = {};
        db.is_real = method(undefined, is_real);
        db.is_numeric = method(undefined, is_numeric);
        db.is_string = method(undefined, is_string);
        db.is_array = method(undefined, is_array);
        db.is_undefined = method(undefined, is_undefined);
        db.is_int32 = method(undefined, is_int32);
        db.is_int64 = method(undefined, is_int64);
        db.is_ptr = method(undefined, is_ptr);
        db.is_vec3 = method(undefined, is_vec3);
        db.is_vec4 = method(undefined, is_vec4);
        db.is_bool = method(undefined, is_bool);
        db.is_nan = method(undefined, is_nan);
        db.is_infinity = method(undefined, is_infinity);
        db.is_struct = method(undefined, is_struct);
        db.is_method = method(undefined, is_method);
        db.typeof = method(undefined, typeof);
        db.instanceof = method(undefined, instanceof);
        db.exception_unhandled_handler = method(undefined, exception_unhandled_handler);
        db.variable_global_exists = method(undefined, variable_global_exists);
        db.variable_global_get = method(undefined, variable_global_get);
        db.variable_global_set = method(undefined, variable_global_set);
        db.variable_instance_exists = method(undefined, variable_instance_exists);
        db.variable_instance_get = method(undefined, variable_instance_get);
        db.variable_instance_set = method(undefined, variable_instance_set);
        db.variable_instance_get_names = method(undefined, variable_instance_get_names);
        db.variable_instance_names_count = method(undefined, variable_instance_names_count);
        db.variable_struct_exists = method(undefined, variable_struct_exists);
        db.variable_struct_get = method(undefined, variable_struct_get);
        db.variable_struct_set = method(undefined, variable_struct_set);
        db.variable_struct_get_names = method(undefined, variable_struct_get_names);
        db.variable_struct_names_count = method(undefined, variable_struct_names_count);
        db.variable_struct_remove = method(undefined, variable_struct_remove);
        db.array_length = method(undefined, array_length);
        db.array_equals = method(undefined, array_equals);
        db.array_create = method(undefined, array_create);
        db.array_copy = method(undefined, array_copy);
        db.array_resize = method(undefined, array_resize);
        db.array_get = method(undefined, array_get);
        db.array_set = method(undefined, array_set);
        db.array_push = method(undefined, array_push);
        db.array_pop = method(undefined, array_pop);
        db.array_insert = method(undefined, array_insert);
        db.array_delete = method(undefined, array_delete);
        db.array_sort = method(undefined, array_sort);
        db.random = method(undefined, random);
        db.random_range = method(undefined, random_range);
        db.irandom = method(undefined, irandom);
        db.irandom_range = method(undefined, irandom_range);
        db.random_set_seed = method(undefined, random_set_seed);
        db.random_get_seed = method(undefined, random_get_seed);
        db.randomize = method(undefined, randomize);
        db.randomise = method(undefined, randomise);
        db.choose = method(undefined, choose);
        db.abs = method(undefined, abs);
        db.round = method(undefined, round);
        db.floor = method(undefined, floor);
        db.ceil = method(undefined, ceil);
        db.sign = method(undefined, sign);
        db.frac = method(undefined, frac);
        db.sqrt = method(undefined, sqrt);
        db.sqr = method(undefined, sqr);
        db.exp = method(undefined, exp);
        db.ln = method(undefined, ln);
        db.log2 = method(undefined, log2);
        db.log10 = method(undefined, log10);
        db.sin = method(undefined, sin);
        db.cos = method(undefined, cos);
        db.tan = method(undefined, tan);
        db.arcsin = method(undefined, arcsin);
        db.arccos = method(undefined, arccos);
        db.arctan = method(undefined, arctan);
        db.arctan2 = method(undefined, arctan2);
        db.dsin = method(undefined, dsin);
        db.dcos = method(undefined, dcos);
        db.dtan = method(undefined, dtan);
        db.darcsin = method(undefined, darcsin);
        db.darccos = method(undefined, darccos);
        db.darctan = method(undefined, darctan);
        db.darctan2 = method(undefined, darctan2);
        db.degtorad = method(undefined, degtorad);
        db.radtodeg = method(undefined, radtodeg);
        db.power = method(undefined, power);
        db.logn = method(undefined, logn);
        db.min = method(undefined, min);
        db.max = method(undefined, max);
        db.mean = method(undefined, mean);
        db.median = method(undefined, median);
        db.clamp = method(undefined, clamp);
        db.lerp = method(undefined, lerp);
        db.dot_product = method(undefined, dot_product);
        db.dot_product_3d = method(undefined, dot_product_3d);
        db.dot_product_normalised = method(undefined, dot_product_normalised);
        db.dot_product_3d_normalised = method(undefined, dot_product_3d_normalised);
        db.dot_product_normalized = method(undefined, dot_product_normalized);
        db.dot_product_3d_normalized = method(undefined, dot_product_3d_normalized);
        db.math_set_epsilon = method(undefined, math_set_epsilon);
        db.math_get_epsilon = method(undefined, math_get_epsilon);
        db.angle_difference = method(undefined, angle_difference);
        db.point_distance_3d = method(undefined, point_distance_3d);
        db.point_distance = method(undefined, point_distance);
        db.point_direction = method(undefined, point_direction);
        db.lengthdir_x = method(undefined, lengthdir_x);
        db.lengthdir_y = method(undefined, lengthdir_y);
        db.real = method(undefined, real);
        db.bool = method(undefined, bool);
        db.string = method(undefined, string);
        db.int64 = method(undefined, int64);
        db.ptr = method(undefined, ptr);
        db.string_format = method(undefined, string_format);
        db.chr = method(undefined, chr);
        db.ansi_char = method(undefined, ansi_char);
        db.ord = method(undefined, ord);
        db.method = method(undefined, katspeak_method);
        db.method_get_index = method(undefined, method_get_index);
        db.method_get_self = method(undefined, method_get_self);
        db.string_length = method(undefined, string_length);
        db.string_byte_length = method(undefined, string_byte_length);
        db.string_pos = method(undefined, string_pos);
        db.string_pos_ext = method(undefined, string_pos_ext);
        db.string_last_pos = method(undefined, string_last_pos);
        db.string_last_pos_ext = method(undefined, string_last_pos_ext);
        db.string_copy = method(undefined, string_copy);
        db.string_char_at = method(undefined, string_char_at);
        db.string_ord_at = method(undefined, string_ord_at);
        db.string_byte_at = method(undefined, string_byte_at);
        db.string_set_byte_at = method(undefined, string_set_byte_at);
        db.string_delete = method(undefined, string_delete);
        db.string_insert = method(undefined, string_insert);
        db.string_lower = method(undefined, string_lower);
        db.string_upper = method(undefined, string_upper);
        db.string_repeat = method(undefined, string_repeat);
        db.string_letters = method(undefined, string_letters);
        db.string_digits = method(undefined, string_digits);
        db.string_lettersdigits = method(undefined, string_lettersdigits);
        db.string_replace = method(undefined, string_replace);
        db.string_replace_all = method(undefined, string_replace_all);
        db.string_count = method(undefined, string_count);
        db.string_hash_to_newline = method(undefined, string_hash_to_newline);
        db.string_ext = method(undefined, string_ext);
        db.string_trim_start = method(undefined, string_trim_start);
        db.string_trim_end = method(undefined, string_trim_end);
        db.string_trim = method(undefined, string_trim);
        db.string_starts_with = method(undefined, string_starts_with);
        db.string_ends_with = method(undefined, string_ends_with);
        db.string_split = method(undefined, string_split);
        db.string_split_ext = method(undefined, string_split_ext);
        db.string_join = method(undefined, string_join);
        db.string_join_ext = method(undefined, string_join_ext);
        db.string_concat = method(undefined, string_concat);
        db.string_concat_ext = method(undefined, string_concat_ext);
        db.string_foreach = method(undefined, string_foreach);
        db.clipboard_has_text = method(undefined, clipboard_has_text);
        db.clipboard_set_text = method(undefined, clipboard_set_text);
        db.clipboard_get_text = method(undefined, clipboard_get_text);
        db.date_current_datetime = method(undefined, date_current_datetime);
        db.date_create_datetime = method(undefined, date_create_datetime);
        db.date_valid_datetime = method(undefined, date_valid_datetime);
        db.date_inc_year = method(undefined, date_inc_year);
        db.date_inc_month = method(undefined, date_inc_month);
        db.date_inc_week = method(undefined, date_inc_week);
        db.date_inc_day = method(undefined, date_inc_day);
        db.date_inc_hour = method(undefined, date_inc_hour);
        db.date_inc_minute = method(undefined, date_inc_minute);
        db.date_inc_second = method(undefined, date_inc_second);
        db.date_get_year = method(undefined, date_get_year);
        db.date_get_month = method(undefined, date_get_month);
        db.date_get_week = method(undefined, date_get_week);
        db.date_get_day = method(undefined, date_get_day);
        db.date_get_hour = method(undefined, date_get_hour);
        db.date_get_minute = method(undefined, date_get_minute);
        db.date_get_second = method(undefined, date_get_second);
        db.date_get_weekday = method(undefined, date_get_weekday);
        db.date_get_day_of_year = method(undefined, date_get_day_of_year);
        db.date_get_hour_of_year = method(undefined, date_get_hour_of_year);
        db.date_get_minute_of_year = method(undefined, date_get_minute_of_year);
        db.date_get_second_of_year = method(undefined, date_get_second_of_year);
        db.date_year_span = method(undefined, date_year_span);
        db.date_month_span = method(undefined, date_month_span);
        db.date_week_span = method(undefined, date_week_span);
        db.date_day_span = method(undefined, date_day_span);
        db.date_hour_span = method(undefined, date_hour_span);
        db.date_minute_span = method(undefined, date_minute_span);
        db.date_second_span = method(undefined, date_second_span);
        db.date_compare_datetime = method(undefined, date_compare_datetime);
        db.date_compare_date = method(undefined, date_compare_date);
        db.date_compare_time = method(undefined, date_compare_time);
        db.date_date_of = method(undefined, date_date_of);
        db.date_time_of = method(undefined, date_time_of);
        db.date_datetime_string = method(undefined, date_datetime_string);
        db.date_date_string = method(undefined, date_date_string);
        db.date_time_string = method(undefined, date_time_string);
        db.date_days_in_month = method(undefined, date_days_in_month);
        db.date_days_in_year = method(undefined, date_days_in_year);
        db.date_leap_year = method(undefined, date_leap_year);
        db.date_is_today = method(undefined, date_is_today);
        db.date_set_timezone = method(undefined, date_set_timezone);
        db.date_get_timezone = method(undefined, date_get_timezone);
        db.game_set_speed = method(undefined, game_set_speed);
        db.game_get_speed = method(undefined, game_get_speed);
        db.motion_set = method(undefined, motion_set);
        db.motion_add = method(undefined, motion_add);
        db.place_free = method(undefined, place_free);
        db.place_empty = method(undefined, place_empty);
        db.place_meeting = method(undefined, place_meeting);
        db.place_snapped = method(undefined, place_snapped);
        db.move_random = method(undefined, move_random);
        db.move_snap = method(undefined, move_snap);
        db.move_towards_point = method(undefined, move_towards_point);
        db.move_contact_solid = method(undefined, move_contact_solid);
        db.move_contact_all = method(undefined, move_contact_all);
        db.move_outside_solid = method(undefined, move_outside_solid);
        db.move_outside_all = method(undefined, move_outside_all);
        db.move_bounce_solid = method(undefined, move_bounce_solid);
        db.move_bounce_all = method(undefined, move_bounce_all);
        db.move_wrap = method(undefined, move_wrap);
        db.move_and_collide = method(undefined, move_and_collide);
        db.distance_to_point = method(undefined, distance_to_point);
        db.distance_to_object = method(undefined, distance_to_object);
        db.position_empty = method(undefined, position_empty);
        db.position_meeting = method(undefined, position_meeting);
        db.path_start = method(undefined, path_start);
        db.path_end = method(undefined, path_end);
        db.mp_linear_step = method(undefined, mp_linear_step);
        db.mp_potential_step = method(undefined, mp_potential_step);
        db.mp_linear_step_object = method(undefined, mp_linear_step_object);
        db.mp_potential_step_object = method(undefined, mp_potential_step_object);
        db.mp_potential_settings = method(undefined, mp_potential_settings);
        db.mp_linear_path = method(undefined, mp_linear_path);
        db.mp_potential_path = method(undefined, mp_potential_path);
        db.mp_linear_path_object = method(undefined, mp_linear_path_object);
        db.mp_potential_path_object = method(undefined, mp_potential_path_object);
        db.mp_grid_create = method(undefined, mp_grid_create);
        db.mp_grid_destroy = method(undefined, mp_grid_destroy);
        db.mp_grid_clear_all = method(undefined, mp_grid_clear_all);
        db.mp_grid_clear_cell = method(undefined, mp_grid_clear_cell);
        db.mp_grid_clear_rectangle = method(undefined, mp_grid_clear_rectangle);
        db.mp_grid_add_cell = method(undefined, mp_grid_add_cell);
        db.mp_grid_get_cell = method(undefined, mp_grid_get_cell);
        db.mp_grid_add_rectangle = method(undefined, mp_grid_add_rectangle);
        db.mp_grid_add_instances = method(undefined, mp_grid_add_instances);
        db.mp_grid_path = method(undefined, mp_grid_path);
        db.mp_grid_draw = method(undefined, mp_grid_draw);
        db.mp_grid_to_ds_grid = method(undefined, mp_grid_to_ds_grid);
        db.collision_point = method(undefined, collision_point);
        db.collision_rectangle = method(undefined, collision_rectangle);
        db.collision_circle = method(undefined, collision_circle);
        db.collision_ellipse = method(undefined, collision_ellipse);
        db.collision_line = method(undefined, collision_line);
        db.collision_point_list = method(undefined, collision_point_list);
        db.collision_rectangle_list = method(undefined, collision_rectangle_list);
        db.collision_circle_list = method(undefined, collision_circle_list);
        db.collision_ellipse_list = method(undefined, collision_ellipse_list);
        db.collision_line_list = method(undefined, collision_line_list);
        db.instance_position_list = method(undefined, instance_position_list);
        db.instance_place_list = method(undefined, instance_place_list);
        db.point_in_rectangle = method(undefined, point_in_rectangle);
        db.point_in_triangle = method(undefined, point_in_triangle);
        db.point_in_circle = method(undefined, point_in_circle);
        db.rectangle_in_rectangle = method(undefined, rectangle_in_rectangle);
        db.rectangle_in_triangle = method(undefined, rectangle_in_triangle);
        db.rectangle_in_circle = method(undefined, rectangle_in_circle);
        db.instance_find = method(undefined, instance_find);
        db.instance_exists = method(undefined, instance_exists);
        db.instance_number = method(undefined, instance_number);
        db.instance_position = method(undefined, instance_position);
        db.instance_nearest = method(undefined, instance_nearest);
        db.instance_furthest = method(undefined, instance_furthest);
        db.instance_place = method(undefined, instance_place);
        db.instance_create_depth = method(undefined, instance_create_depth);
        db.instance_create_layer = method(undefined, instance_create_layer);
        db.instance_copy = method(undefined, instance_copy);
        db.instance_change = method(undefined, instance_change);
        db.instance_destroy = method(undefined, instance_destroy);
        db.position_destroy = method(undefined, position_destroy);
        db.position_change = method(undefined, position_change);
        db.instance_id_get = method(undefined, instance_id_get);
        db.instance_deactivate_all = method(undefined, instance_deactivate_all);
        db.instance_deactivate_object = method(undefined, instance_deactivate_object);
        db.instance_deactivate_region = method(undefined, instance_deactivate_region);
        db.instance_activate_all = method(undefined, instance_activate_all);
        db.instance_activate_object = method(undefined, instance_activate_object);
        db.instance_activate_region = method(undefined, instance_activate_region);
        db.room_goto = method(undefined, room_goto);
        db.room_goto_previous = method(undefined, room_goto_previous);
        db.room_goto_next = method(undefined, room_goto_next);
        db.room_previous = method(undefined, room_previous);
        db.room_next = method(undefined, room_next);
        db.room_restart = method(undefined, room_restart);
        db.game_end = method(undefined, game_end);
        db.game_restart = method(undefined, game_restart);
        db.game_load = method(undefined, game_load);
        db.game_save = method(undefined, game_save);
        db.game_save_buffer = method(undefined, game_save_buffer);
        db.game_load_buffer = method(undefined, game_load_buffer);
        db.scheduler_resolution_set = method(undefined, scheduler_resolution_set);
        db.scheduler_resolution_get = method(undefined, scheduler_resolution_get);
        db.event_perform = method(undefined, event_perform);
        db.event_perform_async = method(undefined, event_perform_async);
        db.event_user = method(undefined, event_user);
        db.event_perform_object = method(undefined, event_perform_object);
        db.event_inherited = method(undefined, event_inherited);
        db.show_debug_message = method(undefined, show_debug_message);
        db.show_debug_overlay = method(undefined, show_debug_overlay);
        db.debug_event = method(undefined, debug_event);
        db.debug_get_callstack = method(undefined, debug_get_callstack);
        db.alarm_get = method(undefined, alarm_get);
        db.alarm_set = method(undefined, alarm_set);
        db.keyboard_set_map = method(undefined, keyboard_set_map);
        db.keyboard_get_map = method(undefined, keyboard_get_map);
        db.keyboard_unset_map = method(undefined, keyboard_unset_map);
        db.keyboard_check = method(undefined, keyboard_check);
        db.keyboard_check_pressed = method(undefined, keyboard_check_pressed);
        db.keyboard_check_released = method(undefined, keyboard_check_released);
        db.keyboard_check_direct = method(undefined, keyboard_check_direct);
        db.keyboard_get_numlock = method(undefined, keyboard_get_numlock);
        db.keyboard_set_numlock = method(undefined, keyboard_set_numlock);
        db.keyboard_key_press = method(undefined, keyboard_key_press);
        db.keyboard_key_release = method(undefined, keyboard_key_release);
        db.keyboard_clear = method(undefined, keyboard_clear);
        db.io_clear = method(undefined, io_clear);
        db.mouse_check_button = method(undefined, mouse_check_button);
        db.mouse_check_button_pressed = method(undefined, mouse_check_button_pressed);
        db.mouse_check_button_released = method(undefined, mouse_check_button_released);
        db.mouse_wheel_up = method(undefined, mouse_wheel_up);
        db.mouse_wheel_down = method(undefined, mouse_wheel_down);
        db.mouse_clear = method(undefined, mouse_clear);
        db.draw_self = method(undefined, draw_self);
        db.draw_sprite = method(undefined, draw_sprite);
        db.draw_sprite_pos = method(undefined, draw_sprite_pos);
        db.draw_sprite_ext = method(undefined, draw_sprite_ext);
        db.draw_sprite_stretched = method(undefined, draw_sprite_stretched);
        db.draw_sprite_stretched_ext = method(undefined, draw_sprite_stretched_ext);
        db.draw_sprite_tiled = method(undefined, draw_sprite_tiled);
        db.draw_sprite_tiled_ext = method(undefined, draw_sprite_tiled_ext);
        db.draw_sprite_part = method(undefined, draw_sprite_part);
        db.draw_sprite_part_ext = method(undefined, draw_sprite_part_ext);
        db.draw_sprite_general = method(undefined, draw_sprite_general);
        db.draw_clear = method(undefined, draw_clear);
        db.draw_clear_alpha = method(undefined, draw_clear_alpha);
        db.draw_point = method(undefined, draw_point);
        db.draw_line = method(undefined, draw_line);
        db.draw_line_width = method(undefined, draw_line_width);
        db.draw_rectangle = method(undefined, draw_rectangle);
        db.draw_roundrect = method(undefined, draw_roundrect);
        db.draw_roundrect_ext = method(undefined, draw_roundrect_ext);
        db.draw_triangle = method(undefined, draw_triangle);
        db.draw_circle = method(undefined, draw_circle);
        db.draw_ellipse = method(undefined, draw_ellipse);
        db.draw_set_circle_precision = method(undefined, draw_set_circle_precision);
        db.draw_arrow = method(undefined, draw_arrow);
        db.draw_button = method(undefined, draw_button);
        db.draw_path = method(undefined, draw_path);
        db.draw_healthbar = method(undefined, draw_healthbar);
        db.draw_getpixel = method(undefined, draw_getpixel);
        db.draw_getpixel_ext = method(undefined, draw_getpixel_ext);
        db.draw_set_colour = method(undefined, draw_set_colour);
        db.draw_set_color = method(undefined, draw_set_color);
        db.draw_set_alpha = method(undefined, draw_set_alpha);
        db.draw_get_colour = method(undefined, draw_get_colour);
        db.draw_get_color = method(undefined, draw_get_color);
        db.draw_get_alpha = method(undefined, draw_get_alpha);
        db.merge_colour = method(undefined, merge_colour);
        db.make_colour_rgb = method(undefined, make_colour_rgb);
        db.make_colour_hsv = method(undefined, make_colour_hsv);
        db.colour_get_red = method(undefined, colour_get_red);
        db.colour_get_green = method(undefined, colour_get_green);
        db.colour_get_blue = method(undefined, colour_get_blue);
        db.colour_get_hue = method(undefined, colour_get_hue);
        db.colour_get_saturation = method(undefined, colour_get_saturation);
        db.colour_get_value = method(undefined, colour_get_value);
        db.merge_color = method(undefined, merge_color);
        db.make_color_rgb = method(undefined, make_color_rgb);
        db.make_color_hsv = method(undefined, make_color_hsv);
        db.color_get_red = method(undefined, color_get_red);
        db.color_get_green = method(undefined, color_get_green);
        db.color_get_blue = method(undefined, color_get_blue);
        db.color_get_hue = method(undefined, color_get_hue);
        db.color_get_saturation = method(undefined, color_get_saturation);
        db.color_get_value = method(undefined, color_get_value);
        db.screen_save = method(undefined, screen_save);
        db.screen_save_part = method(undefined, screen_save_part);
        db.gif_open = method(undefined, gif_open);
        db.gif_add_surface = method(undefined, gif_add_surface);
        db.gif_save = method(undefined, gif_save);
        db.gif_save_buffer = method(undefined, gif_save_buffer);
        db.draw_set_font = method(undefined, draw_set_font);
        db.draw_get_font = method(undefined, draw_get_font);
        db.draw_set_halign = method(undefined, draw_set_halign);
        db.draw_get_halign = method(undefined, draw_get_halign);
        db.draw_set_valign = method(undefined, draw_set_valign);
        db.draw_get_valign = method(undefined, draw_get_valign);
        db.draw_text = method(undefined, draw_text);
        db.draw_text_ext = method(undefined, draw_text_ext);
        db.string_width = method(undefined, string_width);
        db.string_height = method(undefined, string_height);
        db.string_width_ext = method(undefined, string_width_ext);
        db.string_height_ext = method(undefined, string_height_ext);
        db.draw_text_transformed = method(undefined, draw_text_transformed);
        db.draw_text_ext_transformed = method(undefined, draw_text_ext_transformed);
        db.draw_text_colour = method(undefined, draw_text_colour);
        db.draw_text_ext_colour = method(undefined, draw_text_ext_colour);
        db.draw_text_transformed_colour = method(undefined, draw_text_transformed_colour);
        db.draw_text_ext_transformed_colour = method(undefined, draw_text_ext_transformed_colour);
        db.draw_text_color = method(undefined, draw_text_color);
        db.draw_text_ext_color = method(undefined, draw_text_ext_color);
        db.draw_text_transformed_color = method(undefined, draw_text_transformed_color);
        db.draw_text_ext_transformed_color = method(undefined, draw_text_ext_transformed_color);
        db.draw_point_colour = method(undefined, draw_point_colour);
        db.draw_line_colour = method(undefined, draw_line_colour);
        db.draw_line_width_colour = method(undefined, draw_line_width_colour);
        db.draw_rectangle_colour = method(undefined, draw_rectangle_colour);
        db.draw_roundrect_colour = method(undefined, draw_roundrect_colour);
        db.draw_roundrect_colour_ext = method(undefined, draw_roundrect_colour_ext);
        db.draw_triangle_colour = method(undefined, draw_triangle_colour);
        db.draw_circle_colour = method(undefined, draw_circle_colour);
        db.draw_ellipse_colour = method(undefined, draw_ellipse_colour);
        db.draw_point_color = method(undefined, draw_point_color);
        db.draw_line_color = method(undefined, draw_line_color);
        db.draw_line_width_color = method(undefined, draw_line_width_color);
        db.draw_rectangle_color = method(undefined, draw_rectangle_color);
        db.draw_roundrect_color = method(undefined, draw_roundrect_color);
        db.draw_roundrect_color_ext = method(undefined, draw_roundrect_color_ext);
        db.draw_triangle_color = method(undefined, draw_triangle_color);
        db.draw_circle_color = method(undefined, draw_circle_color);
        db.draw_ellipse_color = method(undefined, draw_ellipse_color);
        db.draw_primitive_begin = method(undefined, draw_primitive_begin);
        db.draw_vertex = method(undefined, draw_vertex);
        db.draw_vertex_colour = method(undefined, draw_vertex_colour);
        db.draw_vertex_color = method(undefined, draw_vertex_color);
        db.draw_primitive_end = method(undefined, draw_primitive_end);
        db.sprite_get_uvs = method(undefined, sprite_get_uvs);
        db.font_get_uvs = method(undefined, font_get_uvs);
        db.font_get_info = method(undefined, font_get_info);
        db.font_cache_glyph = method(undefined, font_cache_glyph);
        db.sprite_get_texture = method(undefined, sprite_get_texture);
        db.font_get_texture = method(undefined, font_get_texture);
        db.texture_get_width = method(undefined, texture_get_width);
        db.texture_get_height = method(undefined, texture_get_height);
        db.texture_get_uvs = method(undefined, texture_get_uvs);
        db.draw_primitive_begin_texture = method(undefined, draw_primitive_begin_texture);
        db.draw_vertex_texture = method(undefined, draw_vertex_texture);
        db.draw_vertex_texture_colour = method(undefined, draw_vertex_texture_colour);
        db.draw_vertex_texture_color = method(undefined, draw_vertex_texture_color);
        db.texture_global_scale = method(undefined, texture_global_scale);
        db.surface_create = method(undefined, surface_create);
        db.surface_create_ext = method(undefined, surface_create_ext);
        db.surface_resize = method(undefined, surface_resize);
        db.surface_free = method(undefined, surface_free);
        db.surface_exists = method(undefined, surface_exists);
        db.surface_get_width = method(undefined, surface_get_width);
        db.surface_get_height = method(undefined, surface_get_height);
        db.surface_get_texture = method(undefined, surface_get_texture);
        db.surface_set_target = method(undefined, surface_set_target);
        db.surface_set_target_ext = method(undefined, surface_set_target_ext);
        db.surface_get_target = method(undefined, surface_get_target);
        db.surface_get_target_ext = method(undefined, surface_get_target_ext);
        db.surface_reset_target = method(undefined, surface_reset_target);
        db.surface_depth_disable = method(undefined, surface_depth_disable);
        db.surface_get_depth_disable = method(undefined, surface_get_depth_disable);
        db.draw_surface = method(undefined, draw_surface);
        db.draw_surface_stretched = method(undefined, draw_surface_stretched);
        db.draw_surface_tiled = method(undefined, draw_surface_tiled);
        db.draw_surface_part = method(undefined, draw_surface_part);
        db.draw_surface_ext = method(undefined, draw_surface_ext);
        db.draw_surface_stretched_ext = method(undefined, draw_surface_stretched_ext);
        db.draw_surface_tiled_ext = method(undefined, draw_surface_tiled_ext);
        db.draw_surface_part_ext = method(undefined, draw_surface_part_ext);
        db.draw_surface_general = method(undefined, draw_surface_general);
        db.surface_getpixel = method(undefined, surface_getpixel);
        db.surface_getpixel_ext = method(undefined, surface_getpixel_ext);
        db.surface_save = method(undefined, surface_save);
        db.surface_save_part = method(undefined, surface_save_part);
        db.surface_copy = method(undefined, surface_copy);
        db.surface_copy_part = method(undefined, surface_copy_part);
        db.application_surface_draw_enable = method(undefined, application_surface_draw_enable);
        db.application_get_position = method(undefined, application_get_position);
        db.application_surface_enable = method(undefined, application_surface_enable);
        db.application_surface_is_enabled = method(undefined, application_surface_is_enabled);
        db.video_open = method(undefined, video_open);
        db.video_close = method(undefined, video_close);
        db.video_set_volume = method(undefined, video_set_volume);
        db.video_draw = method(undefined, video_draw);
        db.video_pause = method(undefined, video_pause);
        db.video_resume = method(undefined, video_resume);
        db.video_enable_loop = method(undefined, video_enable_loop);
        db.video_seek_to = method(undefined, video_seek_to);
        db.video_get_duration = method(undefined, video_get_duration);
        db.video_get_position = method(undefined, video_get_position);
        db.video_get_status = method(undefined, video_get_status);
        db.video_get_format = method(undefined, video_get_format);
        db.video_is_looping = method(undefined, video_is_looping);
        db.video_get_volume = method(undefined, video_get_volume);
        db.display_get_width = method(undefined, display_get_width);
        db.display_get_height = method(undefined, display_get_height);
        db.display_get_orientation = method(undefined, display_get_orientation);
        db.display_get_gui_width = method(undefined, display_get_gui_width);
        db.display_get_gui_height = method(undefined, display_get_gui_height);
        db.display_get_frequency = method(undefined, display_get_frequency);
        db.display_reset = method(undefined, display_reset);
        db.display_mouse_get_x = method(undefined, display_mouse_get_x);
        db.display_mouse_get_y = method(undefined, display_mouse_get_y);
        db.display_mouse_set = method(undefined, display_mouse_set);
        db.display_set_ui_visibility = method(undefined, display_set_ui_visibility);
        db.window_set_fullscreen = method(undefined, window_set_fullscreen);
        db.window_get_fullscreen = method(undefined, window_get_fullscreen);
        db.window_set_caption = method(undefined, window_set_caption);
        db.window_set_min_width = method(undefined, window_set_min_width);
        db.window_set_max_width = method(undefined, window_set_max_width);
        db.window_set_min_height = method(undefined, window_set_min_height);
        db.window_set_max_height = method(undefined, window_set_max_height);
        db.window_get_visible_rects = method(undefined, window_get_visible_rects);
        db.window_get_caption = method(undefined, window_get_caption);
        db.window_set_cursor = method(undefined, window_set_cursor);
        db.window_get_cursor = method(undefined, window_get_cursor);
        db.window_set_colour = method(undefined, window_set_colour);
        db.window_get_colour = method(undefined, window_get_colour);
        db.window_set_color = method(undefined, window_set_color);
        db.window_get_color = method(undefined, window_get_color);
        db.window_set_position = method(undefined, window_set_position);
        db.window_set_size = method(undefined, window_set_size);
        db.window_set_rectangle = method(undefined, window_set_rectangle);
        db.window_center = method(undefined, window_center);
        db.window_get_x = method(undefined, window_get_x);
        db.window_get_y = method(undefined, window_get_y);
        db.window_get_width = method(undefined, window_get_width);
        db.window_get_height = method(undefined, window_get_height);
        db.window_mouse_get_x = method(undefined, window_mouse_get_x);
        db.window_mouse_get_y = method(undefined, window_mouse_get_y);
        db.window_mouse_set = method(undefined, window_mouse_set);
        db.window_view_mouse_get_x = method(undefined, window_view_mouse_get_x);
        db.window_view_mouse_get_y = method(undefined, window_view_mouse_get_y);
        db.window_views_mouse_get_x = method(undefined, window_views_mouse_get_x);
        db.window_views_mouse_get_y = method(undefined, window_views_mouse_get_y);
        db.audio_listener_position = method(undefined, audio_listener_position);
        db.audio_listener_velocity = method(undefined, audio_listener_velocity);
        db.audio_listener_orientation = method(undefined, audio_listener_orientation);
        db.audio_emitter_position = method(undefined, audio_emitter_position);
        db.audio_emitter_create = method(undefined, audio_emitter_create);
        db.audio_emitter_free = method(undefined, audio_emitter_free);
        db.audio_emitter_exists = method(undefined, audio_emitter_exists);
        db.audio_emitter_pitch = method(undefined, audio_emitter_pitch);
        db.audio_emitter_velocity = method(undefined, audio_emitter_velocity);
        db.audio_emitter_falloff = method(undefined, audio_emitter_falloff);
        db.audio_emitter_gain = method(undefined, audio_emitter_gain);
        db.audio_play_sound = method(undefined, audio_play_sound);
        db.audio_play_sound_on = method(undefined, audio_play_sound_on);
        db.audio_play_sound_at = method(undefined, audio_play_sound_at);
        db.audio_stop_sound = method(undefined, audio_stop_sound);
        db.audio_resume_sound = method(undefined, audio_resume_sound);
        db.audio_pause_sound = method(undefined, audio_pause_sound);
        db.audio_channel_num = method(undefined, audio_channel_num);
        db.audio_sound_length = method(undefined, audio_sound_length);
        db.audio_get_type = method(undefined, audio_get_type);
        db.audio_falloff_set_model = method(undefined, audio_falloff_set_model);
        db.audio_master_gain = method(undefined, audio_master_gain);
        db.audio_sound_gain = method(undefined, audio_sound_gain);
        db.audio_sound_pitch = method(undefined, audio_sound_pitch);
        db.audio_stop_all = method(undefined, audio_stop_all);
        db.audio_resume_all = method(undefined, audio_resume_all);
        db.audio_pause_all = method(undefined, audio_pause_all);
        db.audio_is_playing = method(undefined, audio_is_playing);
        db.audio_is_paused = method(undefined, audio_is_paused);
        db.audio_exists = method(undefined, audio_exists);
        db.audio_system_is_available = method(undefined, audio_system_is_available);
        db.audio_sound_is_playable = method(undefined, audio_sound_is_playable);
        db.audio_emitter_get_gain = method(undefined, audio_emitter_get_gain);
        db.audio_emitter_get_pitch = method(undefined, audio_emitter_get_pitch);
        db.audio_emitter_get_x = method(undefined, audio_emitter_get_x);
        db.audio_emitter_get_y = method(undefined, audio_emitter_get_y);
        db.audio_emitter_get_z = method(undefined, audio_emitter_get_z);
        db.audio_emitter_get_vx = method(undefined, audio_emitter_get_vx);
        db.audio_emitter_get_vy = method(undefined, audio_emitter_get_vy);
        db.audio_emitter_get_vz = method(undefined, audio_emitter_get_vz);
        db.audio_listener_set_position = method(undefined, audio_listener_set_position);
        db.audio_listener_set_velocity = method(undefined, audio_listener_set_velocity);
        db.audio_listener_set_orientation = method(undefined, audio_listener_set_orientation);
        db.audio_listener_get_data = method(undefined, audio_listener_get_data);
        db.audio_set_master_gain = method(undefined, audio_set_master_gain);
        db.audio_get_master_gain = method(undefined, audio_get_master_gain);
        db.audio_sound_get_gain = method(undefined, audio_sound_get_gain);
        db.audio_sound_get_pitch = method(undefined, audio_sound_get_pitch);
        db.audio_get_name = method(undefined, audio_get_name);
        db.audio_sound_set_track_position = method(undefined, audio_sound_set_track_position);
        db.audio_sound_get_track_position = method(undefined, audio_sound_get_track_position);
        db.audio_create_stream = method(undefined, audio_create_stream);
        db.audio_destroy_stream = method(undefined, audio_destroy_stream);
        db.audio_create_sync_group = method(undefined, audio_create_sync_group);
        db.audio_destroy_sync_group = method(undefined, audio_destroy_sync_group);
        db.audio_play_in_sync_group = method(undefined, audio_play_in_sync_group);
        db.audio_start_sync_group = method(undefined, audio_start_sync_group);
        db.audio_stop_sync_group = method(undefined, audio_stop_sync_group);
        db.audio_pause_sync_group = method(undefined, audio_pause_sync_group);
        db.audio_resume_sync_group = method(undefined, audio_resume_sync_group);
        db.audio_sync_group_get_track_pos = method(undefined, audio_sync_group_get_track_pos);
        db.audio_sync_group_debug = method(undefined, audio_sync_group_debug);
        db.audio_sync_group_is_playing = method(undefined, audio_sync_group_is_playing);
        db.audio_debug = method(undefined, audio_debug);
        db.audio_group_load = method(undefined, audio_group_load);
        db.audio_group_unload = method(undefined, audio_group_unload);
        db.audio_group_is_loaded = method(undefined, audio_group_is_loaded);
        db.audio_group_load_progress = method(undefined, audio_group_load_progress);
        db.audio_group_name = method(undefined, audio_group_name);
        db.audio_group_stop_all = method(undefined, audio_group_stop_all);
        db.audio_group_set_gain = method(undefined, audio_group_set_gain);
        db.audio_create_buffer_sound = method(undefined, audio_create_buffer_sound);
        db.audio_free_buffer_sound = method(undefined, audio_free_buffer_sound);
        db.audio_create_play_queue = method(undefined, audio_create_play_queue);
        db.audio_free_play_queue = method(undefined, audio_free_play_queue);
        db.audio_queue_sound = method(undefined, audio_queue_sound);
        db.audio_get_recorder_count = method(undefined, audio_get_recorder_count);
        db.audio_get_recorder_info = method(undefined, audio_get_recorder_info);
        db.audio_start_recording = method(undefined, audio_start_recording);
        db.audio_stop_recording = method(undefined, audio_stop_recording);
        db.audio_sound_get_listener_mask = method(undefined, audio_sound_get_listener_mask);
        db.audio_emitter_get_listener_mask = method(undefined, audio_emitter_get_listener_mask);
        db.audio_get_listener_mask = method(undefined, audio_get_listener_mask);
        db.audio_sound_set_listener_mask = method(undefined, audio_sound_set_listener_mask);
        db.audio_emitter_set_listener_mask = method(undefined, audio_emitter_set_listener_mask);
        db.audio_set_listener_mask = method(undefined, audio_set_listener_mask);
        db.audio_get_listener_count = method(undefined, audio_get_listener_count);
        db.audio_get_listener_info = method(undefined, audio_get_listener_info);
        db.show_message = method(undefined, show_message);
        db.show_message_async = method(undefined, show_message_async);
        db.clickable_add = method(undefined, clickable_add);
        db.clickable_add_ext = method(undefined, clickable_add_ext);
        db.clickable_change = method(undefined, clickable_change);
        db.clickable_change_ext = method(undefined, clickable_change_ext);
        db.clickable_delete = method(undefined, clickable_delete);
        db.clickable_exists = method(undefined, clickable_exists);
        db.clickable_set_style = method(undefined, clickable_set_style);
        db.show_question = method(undefined, show_question);
        db.show_question_async = method(undefined, show_question_async);
        db.get_integer = method(undefined, get_integer);
        db.get_string = method(undefined, get_string);
        db.get_integer_async = method(undefined, get_integer_async);
        db.get_string_async = method(undefined, get_string_async);
        db.get_login_async = method(undefined, get_login_async);
        db.get_open_filename = method(undefined, get_open_filename);
        db.get_save_filename = method(undefined, get_save_filename);
        db.get_open_filename_ext = method(undefined, get_open_filename_ext);
        db.get_save_filename_ext = method(undefined, get_save_filename_ext);
        db.show_error = method(undefined, show_error);
        db.highscore_clear = method(undefined, highscore_clear);
        db.highscore_add = method(undefined, highscore_add);
        db.highscore_value = method(undefined, highscore_value);
        db.highscore_name = method(undefined, highscore_name);
        db.draw_highscore = method(undefined, draw_highscore);
        db.sprite_exists = method(undefined, sprite_exists);
        db.sprite_get_name = method(undefined, sprite_get_name);
        db.sprite_get_number = method(undefined, sprite_get_number);
        db.sprite_get_width = method(undefined, sprite_get_width);
        db.sprite_get_height = method(undefined, sprite_get_height);
        db.sprite_get_xoffset = method(undefined, sprite_get_xoffset);
        db.sprite_get_yoffset = method(undefined, sprite_get_yoffset);
        db.sprite_get_bbox_mode = method(undefined, sprite_get_bbox_mode);
        db.sprite_get_bbox_left = method(undefined, sprite_get_bbox_left);
        db.sprite_get_bbox_right = method(undefined, sprite_get_bbox_right);
        db.sprite_get_bbox_top = method(undefined, sprite_get_bbox_top);
        db.sprite_get_bbox_bottom = method(undefined, sprite_get_bbox_bottom);
        db.sprite_set_bbox_mode = method(undefined, sprite_set_bbox_mode);
        db.sprite_set_bbox = method(undefined, sprite_set_bbox);
        db.sprite_save = method(undefined, sprite_save);
        db.sprite_save_strip = method(undefined, sprite_save_strip);
        db.sprite_set_cache_size = method(undefined, sprite_set_cache_size);
        db.sprite_set_cache_size_ext = method(undefined, sprite_set_cache_size_ext);
        db.sprite_get_tpe = method(undefined, sprite_get_tpe);
        db.sprite_prefetch = method(undefined, sprite_prefetch);
        db.sprite_prefetch_multi = method(undefined, sprite_prefetch_multi);
        db.sprite_flush = method(undefined, sprite_flush);
        db.sprite_flush_multi = method(undefined, sprite_flush_multi);
        db.sprite_set_speed = method(undefined, sprite_set_speed);
        db.sprite_get_speed_type = method(undefined, sprite_get_speed_type);
        db.sprite_get_speed = method(undefined, sprite_get_speed);
        db.sprite_get_info = method(undefined, sprite_get_info);
        db.sprite_get_nineslice = method(undefined, sprite_get_nineslice);
        db.sprite_set_nineslice = method(undefined, sprite_set_nineslice);
        db.sprite_nineslice_create = method(undefined, sprite_nineslice_create);
        db.texture_is_ready = method(undefined, texture_is_ready);
        db.texture_prefetch = method(undefined, texture_prefetch);
        db.texture_flush = method(undefined, texture_flush);
        db.texturegroup_get_textures = method(undefined, texturegroup_get_textures);
        db.texturegroup_get_sprites = method(undefined, texturegroup_get_sprites);
        db.texturegroup_get_fonts = method(undefined, texturegroup_get_fonts);
        db.texturegroup_get_tilesets = method(undefined, texturegroup_get_tilesets);
        db.texturegroup_load = method(undefined, texturegroup_load);
        db.texturegroup_unload = method(undefined, texturegroup_unload);
        db.texturegroup_get_status = method(undefined, texturegroup_get_status);
        db.texturegroup_set_mode = method(undefined, texturegroup_set_mode);
        db.texture_debug_messages = method(undefined, texture_debug_messages);
        db.font_exists = method(undefined, font_exists);
        db.font_get_name = method(undefined, font_get_name);
        db.font_get_fontname = method(undefined, font_get_fontname);
        db.font_get_bold = method(undefined, font_get_bold);
        db.font_get_italic = method(undefined, font_get_italic);
        db.font_get_first = method(undefined, font_get_first);
        db.font_get_last = method(undefined, font_get_last);
        db.font_get_size = method(undefined, font_get_size);
        db.font_set_cache_size = method(undefined, font_set_cache_size);
        db.path_exists = method(undefined, path_exists);
        db.path_get_name = method(undefined, path_get_name);
        db.path_get_length = method(undefined, path_get_length);
        db.path_get_kind = method(undefined, path_get_kind);
        db.path_get_closed = method(undefined, path_get_closed);
        db.path_get_precision = method(undefined, path_get_precision);
        db.path_get_number = method(undefined, path_get_number);
        db.path_get_point_x = method(undefined, path_get_point_x);
        db.path_get_point_y = method(undefined, path_get_point_y);
        db.path_get_point_speed = method(undefined, path_get_point_speed);
        db.path_get_x = method(undefined, path_get_x);
        db.path_get_y = method(undefined, path_get_y);
        db.path_get_speed = method(undefined, path_get_speed);
        db.script_exists = method(undefined, script_exists);
        db.script_get_name = method(undefined, script_get_name);
        db.timeline_add = method(undefined, timeline_add);
        db.timeline_delete = method(undefined, timeline_delete);
        db.timeline_clear = method(undefined, timeline_clear);
        db.timeline_exists = method(undefined, timeline_exists);
        db.timeline_get_name = method(undefined, timeline_get_name);
        db.timeline_moment_clear = method(undefined, timeline_moment_clear);
        db.timeline_moment_add_script = method(undefined, timeline_moment_add_script);
        db.timeline_size = method(undefined, timeline_size);
        db.timeline_max_moment = method(undefined, timeline_max_moment);
        db.object_exists = method(undefined, object_exists);
        db.object_get_name = method(undefined, object_get_name);
        db.object_get_sprite = method(undefined, object_get_sprite);
        db.object_get_solid = method(undefined, object_get_solid);
        db.object_get_visible = method(undefined, object_get_visible);
        db.object_get_persistent = method(undefined, object_get_persistent);
        db.object_get_mask = method(undefined, object_get_mask);
        db.object_get_parent = method(undefined, object_get_parent);
        db.object_get_physics = method(undefined, object_get_physics);
        db.object_is_ancestor = method(undefined, object_is_ancestor);
        db.room_exists = method(undefined, room_exists);
        db.room_get_name = method(undefined, room_get_name);
        db.sprite_set_offset = method(undefined, sprite_set_offset);
        db.sprite_duplicate = method(undefined, sprite_duplicate);
        db.sprite_assign = method(undefined, sprite_assign);
        db.sprite_merge = method(undefined, sprite_merge);
        db.sprite_add = method(undefined, sprite_add);
        db.sprite_replace = method(undefined, sprite_replace);
        db.sprite_create_from_surface = method(undefined, sprite_create_from_surface);
        db.sprite_add_from_surface = method(undefined, sprite_add_from_surface);
        db.sprite_delete = method(undefined, sprite_delete);
        db.sprite_set_alpha_from_sprite = method(undefined, sprite_set_alpha_from_sprite);
        db.sprite_collision_mask = method(undefined, sprite_collision_mask);
        db.font_add_enable_aa = method(undefined, font_add_enable_aa);
        db.font_add_get_enable_aa = method(undefined, font_add_get_enable_aa);
        db.font_add = method(undefined, font_add);
        db.font_add_sprite = method(undefined, font_add_sprite);
        db.font_add_sprite_ext = method(undefined, font_add_sprite_ext);
        db.font_replace_sprite = method(undefined, font_replace_sprite);
        db.font_replace_sprite_ext = method(undefined, font_replace_sprite_ext);
        db.font_delete = method(undefined, font_delete);
        db.path_set_kind = method(undefined, path_set_kind);
        db.path_set_closed = method(undefined, path_set_closed);
        db.path_set_precision = method(undefined, path_set_precision);
        db.path_add = method(undefined, path_add);
        db.path_assign = method(undefined, path_assign);
        db.path_duplicate = method(undefined, path_duplicate);
        db.path_append = method(undefined, path_append);
        db.path_delete = method(undefined, path_delete);
        db.path_add_point = method(undefined, path_add_point);
        db.path_insert_point = method(undefined, path_insert_point);
        db.path_change_point = method(undefined, path_change_point);
        db.path_delete_point = method(undefined, path_delete_point);
        db.path_clear_points = method(undefined, path_clear_points);
        db.path_reverse = method(undefined, path_reverse);
        db.path_mirror = method(undefined, path_mirror);
        db.path_flip = method(undefined, path_flip);
        db.path_rotate = method(undefined, path_rotate);
        db.path_rescale = method(undefined, path_rescale);
        db.path_shift = method(undefined, path_shift);
        db.script_execute = method(undefined, script_execute);
        db.script_execute_ext = method(undefined, script_execute_ext);
        db.object_set_sprite = method(undefined, object_set_sprite);
        db.object_set_solid = method(undefined, object_set_solid);
        db.object_set_visible = method(undefined, object_set_visible);
        db.object_set_persistent = method(undefined, object_set_persistent);
        db.object_set_mask = method(undefined, object_set_mask);
        db.room_set_width = method(undefined, room_set_width);
        db.room_set_height = method(undefined, room_set_height);
        db.room_set_persistent = method(undefined, room_set_persistent);
        db.room_set_viewport = method(undefined, room_set_viewport);
        db.room_get_viewport = method(undefined, room_get_viewport);
        db.room_set_view_enabled = method(undefined, room_set_view_enabled);
        db.room_add = method(undefined, room_add);
        db.room_duplicate = method(undefined, room_duplicate);
        db.room_assign = method(undefined, room_assign);
        db.room_instance_add = method(undefined, room_instance_add);
        db.room_instance_clear = method(undefined, room_instance_clear);
        db.room_get_camera = method(undefined, room_get_camera);
        db.room_set_camera = method(undefined, room_set_camera);
        db.asset_get_index = method(undefined, asset_get_index);
        db.asset_get_type = method(undefined, asset_get_type);
        db.file_text_open_from_string = method(undefined, file_text_open_from_string);
        db.file_text_open_read = method(undefined, file_text_open_read);
        db.file_text_open_write = method(undefined, file_text_open_write);
        db.file_text_open_append = method(undefined, file_text_open_append);
        db.file_text_close = method(undefined, file_text_close);
        db.file_text_write_string = method(undefined, file_text_write_string);
        db.file_text_write_real = method(undefined, file_text_write_real);
        db.file_text_writeln = method(undefined, file_text_writeln);
        db.file_text_read_string = method(undefined, file_text_read_string);
        db.file_text_read_real = method(undefined, file_text_read_real);
        db.file_text_readln = method(undefined, file_text_readln);
        db.file_text_eof = method(undefined, file_text_eof);
        db.file_text_eoln = method(undefined, file_text_eoln);
        db.file_exists = method(undefined, file_exists);
        db.file_delete = method(undefined, file_delete);
        db.file_rename = method(undefined, file_rename);
        db.file_copy = method(undefined, file_copy);
        db.directory_exists = method(undefined, directory_exists);
        db.directory_create = method(undefined, directory_create);
        db.directory_destroy = method(undefined, directory_destroy);
        db.file_find_first = method(undefined, file_find_first);
        db.file_find_next = method(undefined, file_find_next);
        db.file_find_close = method(undefined, file_find_close);
        db.file_attributes = method(undefined, file_attributes);
        db.filename_name = method(undefined, filename_name);
        db.filename_path = method(undefined, filename_path);
        db.filename_dir = method(undefined, filename_dir);
        db.filename_drive = method(undefined, filename_drive);
        db.filename_ext = method(undefined, filename_ext);
        db.filename_change_ext = method(undefined, filename_change_ext);
        db.file_bin_open = method(undefined, file_bin_open);
        db.file_bin_rewrite = method(undefined, file_bin_rewrite);
        db.file_bin_close = method(undefined, file_bin_close);
        db.file_bin_position = method(undefined, file_bin_position);
        db.file_bin_size = method(undefined, file_bin_size);
        db.file_bin_seek = method(undefined, file_bin_seek);
        db.file_bin_write_byte = method(undefined, file_bin_write_byte);
        db.file_bin_read_byte = method(undefined, file_bin_read_byte);
        db.parameter_count = method(undefined, parameter_count);
        db.parameter_string = method(undefined, parameter_string);
        db.environment_get_variable = method(undefined, environment_get_variable);
        db.ini_open_from_string = method(undefined, ini_open_from_string);
        db.ini_open = method(undefined, ini_open);
        db.ini_close = method(undefined, ini_close);
        db.ini_read_string = method(undefined, ini_read_string);
        db.ini_read_real = method(undefined, ini_read_real);
        db.ini_write_string = method(undefined, ini_write_string);
        db.ini_write_real = method(undefined, ini_write_real);
        db.ini_key_exists = method(undefined, ini_key_exists);
        db.ini_section_exists = method(undefined, ini_section_exists);
        db.ini_key_delete = method(undefined, ini_key_delete);
        db.ini_section_delete = method(undefined, ini_section_delete);
        db.ds_set_precision = method(undefined, ds_set_precision);
        db.ds_exists = method(undefined, ds_exists);
        db.ds_stack_create = method(undefined, ds_stack_create);
        db.ds_stack_destroy = method(undefined, ds_stack_destroy);
        db.ds_stack_clear = method(undefined, ds_stack_clear);
        db.ds_stack_copy = method(undefined, ds_stack_copy);
        db.ds_stack_size = method(undefined, ds_stack_size);
        db.ds_stack_empty = method(undefined, ds_stack_empty);
        db.ds_stack_push = method(undefined, ds_stack_push);
        db.ds_stack_pop = method(undefined, ds_stack_pop);
        db.ds_stack_top = method(undefined, ds_stack_top);
        db.ds_stack_write = method(undefined, ds_stack_write);
        db.ds_stack_read = method(undefined, ds_stack_read);
        db.ds_queue_create = method(undefined, ds_queue_create);
        db.ds_queue_destroy = method(undefined, ds_queue_destroy);
        db.ds_queue_clear = method(undefined, ds_queue_clear);
        db.ds_queue_copy = method(undefined, ds_queue_copy);
        db.ds_queue_size = method(undefined, ds_queue_size);
        db.ds_queue_empty = method(undefined, ds_queue_empty);
        db.ds_queue_enqueue = method(undefined, ds_queue_enqueue);
        db.ds_queue_dequeue = method(undefined, ds_queue_dequeue);
        db.ds_queue_head = method(undefined, ds_queue_head);
        db.ds_queue_tail = method(undefined, ds_queue_tail);
        db.ds_queue_write = method(undefined, ds_queue_write);
        db.ds_queue_read = method(undefined, ds_queue_read);
        db.ds_list_create = method(undefined, ds_list_create);
        db.ds_list_destroy = method(undefined, ds_list_destroy);
        db.ds_list_clear = method(undefined, ds_list_clear);
        db.ds_list_copy = method(undefined, ds_list_copy);
        db.ds_list_size = method(undefined, ds_list_size);
        db.ds_list_empty = method(undefined, ds_list_empty);
        db.ds_list_add = method(undefined, ds_list_add);
        db.ds_list_insert = method(undefined, ds_list_insert);
        db.ds_list_replace = method(undefined, ds_list_replace);
        db.ds_list_delete = method(undefined, ds_list_delete);
        db.ds_list_find_index = method(undefined, ds_list_find_index);
        db.ds_list_find_value = method(undefined, ds_list_find_value);
        db.ds_list_is_map = method(undefined, ds_list_is_map);
        db.ds_list_is_list = method(undefined, ds_list_is_list);
        db.ds_list_mark_as_list = method(undefined, ds_list_mark_as_list);
        db.ds_list_mark_as_map = method(undefined, ds_list_mark_as_map);
        db.ds_list_sort = method(undefined, ds_list_sort);
        db.ds_list_shuffle = method(undefined, ds_list_shuffle);
        db.ds_list_write = method(undefined, ds_list_write);
        db.ds_list_read = method(undefined, ds_list_read);
        db.ds_list_set = method(undefined, ds_list_set);
        db.ds_map_create = method(undefined, ds_map_create);
        db.ds_map_destroy = method(undefined, ds_map_destroy);
        db.ds_map_clear = method(undefined, ds_map_clear);
        db.ds_map_copy = method(undefined, ds_map_copy);
        db.ds_map_size = method(undefined, ds_map_size);
        db.ds_map_empty = method(undefined, ds_map_empty);
        db.ds_map_add = method(undefined, ds_map_add);
        db.ds_map_add_list = method(undefined, ds_map_add_list);
        db.ds_map_add_map = method(undefined, ds_map_add_map);
        db.ds_map_replace = method(undefined, ds_map_replace);
        db.ds_map_replace_map = method(undefined, ds_map_replace_map);
        db.ds_map_replace_list = method(undefined, ds_map_replace_list);
        db.ds_map_delete = method(undefined, ds_map_delete);
        db.ds_map_exists = method(undefined, ds_map_exists);
        db.ds_map_values_to_array = method(undefined, ds_map_values_to_array);
        db.ds_map_keys_to_array = method(undefined, ds_map_keys_to_array);
        db.ds_map_find_value = method(undefined, ds_map_find_value);
        db.ds_map_is_map = method(undefined, ds_map_is_map);
        db.ds_map_is_list = method(undefined, ds_map_is_list);
        db.ds_map_find_previous = method(undefined, ds_map_find_previous);
        db.ds_map_find_next = method(undefined, ds_map_find_next);
        db.ds_map_find_first = method(undefined, ds_map_find_first);
        db.ds_map_find_last = method(undefined, ds_map_find_last);
        db.ds_map_write = method(undefined, ds_map_write);
        db.ds_map_read = method(undefined, ds_map_read);
        db.ds_map_secure_save = method(undefined, ds_map_secure_save);
        db.ds_map_secure_load = method(undefined, ds_map_secure_load);
        db.ds_map_secure_load_buffer = method(undefined, ds_map_secure_load_buffer);
        db.ds_map_secure_save_buffer = method(undefined, ds_map_secure_save_buffer);
        db.ds_map_set = method(undefined, ds_map_set);
        db.ds_priority_create = method(undefined, ds_priority_create);
        db.ds_priority_destroy = method(undefined, ds_priority_destroy);
        db.ds_priority_clear = method(undefined, ds_priority_clear);
        db.ds_priority_copy = method(undefined, ds_priority_copy);
        db.ds_priority_size = method(undefined, ds_priority_size);
        db.ds_priority_empty = method(undefined, ds_priority_empty);
        db.ds_priority_add = method(undefined, ds_priority_add);
        db.ds_priority_change_priority = method(undefined, ds_priority_change_priority);
        db.ds_priority_find_priority = method(undefined, ds_priority_find_priority);
        db.ds_priority_delete_value = method(undefined, ds_priority_delete_value);
        db.ds_priority_delete_min = method(undefined, ds_priority_delete_min);
        db.ds_priority_find_min = method(undefined, ds_priority_find_min);
        db.ds_priority_delete_max = method(undefined, ds_priority_delete_max);
        db.ds_priority_find_max = method(undefined, ds_priority_find_max);
        db.ds_priority_write = method(undefined, ds_priority_write);
        db.ds_priority_read = method(undefined, ds_priority_read);
        db.ds_grid_create = method(undefined, ds_grid_create);
        db.ds_grid_destroy = method(undefined, ds_grid_destroy);
        db.ds_grid_copy = method(undefined, ds_grid_copy);
        db.ds_grid_resize = method(undefined, ds_grid_resize);
        db.ds_grid_width = method(undefined, ds_grid_width);
        db.ds_grid_height = method(undefined, ds_grid_height);
        db.ds_grid_clear = method(undefined, ds_grid_clear);
        db.ds_grid_add = method(undefined, ds_grid_add);
        db.ds_grid_multiply = method(undefined, ds_grid_multiply);
        db.ds_grid_set_region = method(undefined, ds_grid_set_region);
        db.ds_grid_add_region = method(undefined, ds_grid_add_region);
        db.ds_grid_multiply_region = method(undefined, ds_grid_multiply_region);
        db.ds_grid_set_disk = method(undefined, ds_grid_set_disk);
        db.ds_grid_add_disk = method(undefined, ds_grid_add_disk);
        db.ds_grid_multiply_disk = method(undefined, ds_grid_multiply_disk);
        db.ds_grid_set_grid_region = method(undefined, ds_grid_set_grid_region);
        db.ds_grid_add_grid_region = method(undefined, ds_grid_add_grid_region);
        db.ds_grid_multiply_grid_region = method(undefined, ds_grid_multiply_grid_region);
        db.ds_grid_get_sum = method(undefined, ds_grid_get_sum);
        db.ds_grid_get_max = method(undefined, ds_grid_get_max);
        db.ds_grid_get_min = method(undefined, ds_grid_get_min);
        db.ds_grid_get_mean = method(undefined, ds_grid_get_mean);
        db.ds_grid_get_disk_sum = method(undefined, ds_grid_get_disk_sum);
        db.ds_grid_get_disk_min = method(undefined, ds_grid_get_disk_min);
        db.ds_grid_get_disk_max = method(undefined, ds_grid_get_disk_max);
        db.ds_grid_get_disk_mean = method(undefined, ds_grid_get_disk_mean);
        db.ds_grid_value_exists = method(undefined, ds_grid_value_exists);
        db.ds_grid_value_x = method(undefined, ds_grid_value_x);
        db.ds_grid_value_y = method(undefined, ds_grid_value_y);
        db.ds_grid_value_disk_exists = method(undefined, ds_grid_value_disk_exists);
        db.ds_grid_value_disk_x = method(undefined, ds_grid_value_disk_x);
        db.ds_grid_value_disk_y = method(undefined, ds_grid_value_disk_y);
        db.ds_grid_shuffle = method(undefined, ds_grid_shuffle);
        db.ds_grid_write = method(undefined, ds_grid_write);
        db.ds_grid_read = method(undefined, ds_grid_read);
        db.ds_grid_sort = method(undefined, ds_grid_sort);
        db.ds_grid_set = method(undefined, ds_grid_set);
        db.ds_grid_get = method(undefined, ds_grid_get);
        db.effect_create_below = method(undefined, effect_create_below);
        db.effect_create_above = method(undefined, effect_create_above);
        db.effect_clear = method(undefined, effect_clear);
        db.part_type_create = method(undefined, part_type_create);
        db.part_type_destroy = method(undefined, part_type_destroy);
        db.part_type_exists = method(undefined, part_type_exists);
        db.part_type_clear = method(undefined, part_type_clear);
        db.part_type_shape = method(undefined, part_type_shape);
        db.part_type_sprite = method(undefined, part_type_sprite);
        db.part_type_size = method(undefined, part_type_size);
        db.part_type_scale = method(undefined, part_type_scale);
        db.part_type_orientation = method(undefined, part_type_orientation);
        db.part_type_life = method(undefined, part_type_life);
        db.part_type_step = method(undefined, part_type_step);
        db.part_type_death = method(undefined, part_type_death);
        db.part_type_speed = method(undefined, part_type_speed);
        db.part_type_direction = method(undefined, part_type_direction);
        db.part_type_gravity = method(undefined, part_type_gravity);
        db.part_type_colour1 = method(undefined, part_type_colour1);
        db.part_type_colour2 = method(undefined, part_type_colour2);
        db.part_type_colour3 = method(undefined, part_type_colour3);
        db.part_type_colour_mix = method(undefined, part_type_colour_mix);
        db.part_type_colour_rgb = method(undefined, part_type_colour_rgb);
        db.part_type_colour_hsv = method(undefined, part_type_colour_hsv);
        db.part_type_color1 = method(undefined, part_type_color1);
        db.part_type_color2 = method(undefined, part_type_color2);
        db.part_type_color3 = method(undefined, part_type_color3);
        db.part_type_color_mix = method(undefined, part_type_color_mix);
        db.part_type_color_rgb = method(undefined, part_type_color_rgb);
        db.part_type_color_hsv = method(undefined, part_type_color_hsv);
        db.part_type_alpha1 = method(undefined, part_type_alpha1);
        db.part_type_alpha2 = method(undefined, part_type_alpha2);
        db.part_type_alpha3 = method(undefined, part_type_alpha3);
        db.part_type_blend = method(undefined, part_type_blend);
        db.part_system_create = method(undefined, part_system_create);
        db.part_system_create_layer = method(undefined, part_system_create_layer);
        db.part_system_destroy = method(undefined, part_system_destroy);
        db.part_system_exists = method(undefined, part_system_exists);
        db.part_system_clear = method(undefined, part_system_clear);
        db.part_system_draw_order = method(undefined, part_system_draw_order);
        db.part_system_depth = method(undefined, part_system_depth);
        db.part_system_position = method(undefined, part_system_position);
        db.part_system_automatic_update = method(undefined, part_system_automatic_update);
        db.part_system_automatic_draw = method(undefined, part_system_automatic_draw);
        db.part_system_update = method(undefined, part_system_update);
        db.part_system_drawit = method(undefined, part_system_drawit);
        db.part_system_get_layer = method(undefined, part_system_get_layer);
        db.part_system_layer = method(undefined, part_system_layer);
        db.part_particles_create = method(undefined, part_particles_create);
        db.part_particles_create_colour = method(undefined, part_particles_create_colour);
        db.part_particles_create_color = method(undefined, part_particles_create_color);
        db.part_particles_clear = method(undefined, part_particles_clear);
        db.part_particles_count = method(undefined, part_particles_count);
        db.part_emitter_create = method(undefined, part_emitter_create);
        db.part_emitter_destroy = method(undefined, part_emitter_destroy);
        db.part_emitter_destroy_all = method(undefined, part_emitter_destroy_all);
        db.part_emitter_exists = method(undefined, part_emitter_exists);
        db.part_emitter_clear = method(undefined, part_emitter_clear);
        db.part_emitter_region = method(undefined, part_emitter_region);
        db.part_emitter_burst = method(undefined, part_emitter_burst);
        db.part_emitter_stream = method(undefined, part_emitter_stream);
        db.external_call = method(undefined, external_call);
        db.external_define = method(undefined, external_define);
        db.external_free = method(undefined, external_free);
        db.window_handle = method(undefined, window_handle);
        db.window_device = method(undefined, window_device);
        db.matrix_get = method(undefined, matrix_get);
        db.matrix_set = method(undefined, matrix_set);
        db.matrix_build_identity = method(undefined, matrix_build_identity);
        db.matrix_build = method(undefined, matrix_build);
        db.matrix_build_lookat = method(undefined, matrix_build_lookat);
        db.matrix_build_projection_ortho = method(undefined, matrix_build_projection_ortho);
        db.matrix_build_projection_perspective = method(undefined, matrix_build_projection_perspective);
        db.matrix_build_projection_perspective_fov = method(undefined, matrix_build_projection_perspective_fov);
        db.matrix_multiply = method(undefined, matrix_multiply);
        db.matrix_transform_vertex = method(undefined, matrix_transform_vertex);
        db.matrix_stack_push = method(undefined, matrix_stack_push);
        db.matrix_stack_pop = method(undefined, matrix_stack_pop);
        db.matrix_stack_set = method(undefined, matrix_stack_set);
        db.matrix_stack_clear = method(undefined, matrix_stack_clear);
        db.matrix_stack_top = method(undefined, matrix_stack_top);
        db.matrix_stack_is_empty = method(undefined, matrix_stack_is_empty);
        db.browser_input_capture = method(undefined, browser_input_capture);
        db.os_get_config = method(undefined, os_get_config);
        db.os_get_info = method(undefined, os_get_info);
        db.os_get_language = method(undefined, os_get_language);
        db.os_get_region = method(undefined, os_get_region);
        db.os_check_permission = method(undefined, os_check_permission);
        db.os_request_permission = method(undefined, os_request_permission);
        db.os_lock_orientation = method(undefined, os_lock_orientation);
        db.os_set_orientation_lock = method(undefined, os_set_orientation_lock);
        db.display_get_dpi_x = method(undefined, display_get_dpi_x);
        db.display_get_dpi_y = method(undefined, display_get_dpi_y);
        db.display_set_gui_size = method(undefined, display_set_gui_size);
        db.display_set_gui_maximise = method(undefined, display_set_gui_maximise);
        db.display_set_gui_maximize = method(undefined, display_set_gui_maximize);
        db.device_mouse_dbclick_enable = method(undefined, device_mouse_dbclick_enable);
        db.display_set_timing_method = method(undefined, display_set_timing_method);
        db.display_get_timing_method = method(undefined, display_get_timing_method);
        db.display_set_sleep_margin = method(undefined, display_set_sleep_margin);
        db.display_get_sleep_margin = method(undefined, display_get_sleep_margin);
        db.virtual_key_add = method(undefined, virtual_key_add);
        db.virtual_key_hide = method(undefined, virtual_key_hide);
        db.virtual_key_delete = method(undefined, virtual_key_delete);
        db.virtual_key_show = method(undefined, virtual_key_show);
        db.draw_enable_drawevent = method(undefined, draw_enable_drawevent);
        db.draw_enable_swf_aa = method(undefined, draw_enable_swf_aa);
        db.draw_set_swf_aa_level = method(undefined, draw_set_swf_aa_level);
        db.draw_get_swf_aa_level = method(undefined, draw_get_swf_aa_level);
        db.draw_texture_flush = method(undefined, draw_texture_flush);
        db.draw_flush = method(undefined, draw_flush);
        db.gpu_set_blendenable = method(undefined, gpu_set_blendenable);
        db.gpu_set_ztestenable = method(undefined, gpu_set_ztestenable);
        db.gpu_set_zfunc = method(undefined, gpu_set_zfunc);
        db.gpu_set_zwriteenable = method(undefined, gpu_set_zwriteenable);
        db.gpu_set_fog = method(undefined, gpu_set_fog);
        db.gpu_set_cullmode = method(undefined, gpu_set_cullmode);
        db.gpu_set_blendmode = method(undefined, gpu_set_blendmode);
        db.gpu_set_blendmode_ext = method(undefined, gpu_set_blendmode_ext);
        db.gpu_set_blendmode_ext_sepalpha = method(undefined, gpu_set_blendmode_ext_sepalpha);
        db.gpu_set_colorwriteenable = method(undefined, gpu_set_colorwriteenable);
        db.gpu_set_colourwriteenable = method(undefined, gpu_set_colourwriteenable);
        db.gpu_set_alphatestenable = method(undefined, gpu_set_alphatestenable);
        db.gpu_set_alphatestref = method(undefined, gpu_set_alphatestref);
        db.gpu_set_texfilter = method(undefined, gpu_set_texfilter);
        db.gpu_set_texfilter_ext = method(undefined, gpu_set_texfilter_ext);
        db.gpu_set_texrepeat = method(undefined, gpu_set_texrepeat);
        db.gpu_set_texrepeat_ext = method(undefined, gpu_set_texrepeat_ext);
        db.gpu_set_tex_filter = method(undefined, gpu_set_tex_filter);
        db.gpu_set_tex_filter_ext = method(undefined, gpu_set_tex_filter_ext);
        db.gpu_set_tex_repeat = method(undefined, gpu_set_tex_repeat);
        db.gpu_set_tex_repeat_ext = method(undefined, gpu_set_tex_repeat_ext);
        db.gpu_set_tex_mip_filter = method(undefined, gpu_set_tex_mip_filter);
        db.gpu_set_tex_mip_filter_ext = method(undefined, gpu_set_tex_mip_filter_ext);
        db.gpu_set_tex_mip_bias = method(undefined, gpu_set_tex_mip_bias);
        db.gpu_set_tex_mip_bias_ext = method(undefined, gpu_set_tex_mip_bias_ext);
        db.gpu_set_tex_min_mip = method(undefined, gpu_set_tex_min_mip);
        db.gpu_set_tex_min_mip_ext = method(undefined, gpu_set_tex_min_mip_ext);
        db.gpu_set_tex_max_mip = method(undefined, gpu_set_tex_max_mip);
        db.gpu_set_tex_max_mip_ext = method(undefined, gpu_set_tex_max_mip_ext);
        db.gpu_set_tex_max_aniso = method(undefined, gpu_set_tex_max_aniso);
        db.gpu_set_tex_max_aniso_ext = method(undefined, gpu_set_tex_max_aniso_ext);
        db.gpu_set_tex_mip_enable = method(undefined, gpu_set_tex_mip_enable);
        db.gpu_set_tex_mip_enable_ext = method(undefined, gpu_set_tex_mip_enable_ext);
        db.gpu_get_blendenable = method(undefined, gpu_get_blendenable);
        db.gpu_get_ztestenable = method(undefined, gpu_get_ztestenable);
        db.gpu_get_zfunc = method(undefined, gpu_get_zfunc);
        db.gpu_get_zwriteenable = method(undefined, gpu_get_zwriteenable);
        db.gpu_get_fog = method(undefined, gpu_get_fog);
        db.gpu_get_cullmode = method(undefined, gpu_get_cullmode);
        db.gpu_get_blendmode = method(undefined, gpu_get_blendmode);
        db.gpu_get_blendmode_ext = method(undefined, gpu_get_blendmode_ext);
        db.gpu_get_blendmode_ext_sepalpha = method(undefined, gpu_get_blendmode_ext_sepalpha);
        db.gpu_get_blendmode_src = method(undefined, gpu_get_blendmode_src);
        db.gpu_get_blendmode_dest = method(undefined, gpu_get_blendmode_dest);
        db.gpu_get_blendmode_srcalpha = method(undefined, gpu_get_blendmode_srcalpha);
        db.gpu_get_blendmode_destalpha = method(undefined, gpu_get_blendmode_destalpha);
        db.gpu_get_colorwriteenable = method(undefined, gpu_get_colorwriteenable);
        db.gpu_get_colourwriteenable = method(undefined, gpu_get_colourwriteenable);
        db.gpu_get_alphatestenable = method(undefined, gpu_get_alphatestenable);
        db.gpu_get_alphatestref = method(undefined, gpu_get_alphatestref);
        db.gpu_get_texfilter = method(undefined, gpu_get_texfilter);
        db.gpu_get_texfilter_ext = method(undefined, gpu_get_texfilter_ext);
        db.gpu_get_texrepeat = method(undefined, gpu_get_texrepeat);
        db.gpu_get_texrepeat_ext = method(undefined, gpu_get_texrepeat_ext);
        db.gpu_get_tex_filter = method(undefined, gpu_get_tex_filter);
        db.gpu_get_tex_filter_ext = method(undefined, gpu_get_tex_filter_ext);
        db.gpu_get_tex_repeat = method(undefined, gpu_get_tex_repeat);
        db.gpu_get_tex_repeat_ext = method(undefined, gpu_get_tex_repeat_ext);
        db.gpu_get_tex_mip_filter = method(undefined, gpu_get_tex_mip_filter);
        db.gpu_get_tex_mip_filter_ext = method(undefined, gpu_get_tex_mip_filter_ext);
        db.gpu_get_tex_mip_bias = method(undefined, gpu_get_tex_mip_bias);
        db.gpu_get_tex_mip_bias_ext = method(undefined, gpu_get_tex_mip_bias_ext);
        db.gpu_get_tex_min_mip = method(undefined, gpu_get_tex_min_mip);
        db.gpu_get_tex_min_mip_ext = method(undefined, gpu_get_tex_min_mip_ext);
        db.gpu_get_tex_max_mip = method(undefined, gpu_get_tex_max_mip);
        db.gpu_get_tex_max_mip_ext = method(undefined, gpu_get_tex_max_mip_ext);
        db.gpu_get_tex_max_aniso = method(undefined, gpu_get_tex_max_aniso);
        db.gpu_get_tex_max_aniso_ext = method(undefined, gpu_get_tex_max_aniso_ext);
        db.gpu_get_tex_mip_enable = method(undefined, gpu_get_tex_mip_enable);
        db.gpu_get_tex_mip_enable_ext = method(undefined, gpu_get_tex_mip_enable_ext);
        db.gpu_push_state = method(undefined, gpu_push_state);
        db.gpu_pop_state = method(undefined, gpu_pop_state);
        db.gpu_get_state = method(undefined, gpu_get_state);
        db.gpu_set_state = method(undefined, gpu_set_state);
        db.draw_light_define_ambient = method(undefined, draw_light_define_ambient);
        db.draw_light_define_direction = method(undefined, draw_light_define_direction);
        db.draw_light_define_point = method(undefined, draw_light_define_point);
        db.draw_light_enable = method(undefined, draw_light_enable);
        db.draw_set_lighting = method(undefined, draw_set_lighting);
        db.draw_light_get_ambient = method(undefined, draw_light_get_ambient);
        db.draw_light_get = method(undefined, draw_light_get);
        db.draw_get_lighting = method(undefined, draw_get_lighting);
        db.shop_leave_rating = method(undefined, shop_leave_rating);
        db.url_get_domain = method(undefined, url_get_domain);
        db.url_open = method(undefined, url_open);
        db.url_open_ext = method(undefined, url_open_ext);
        db.url_open_full = method(undefined, url_open_full);
        db.get_timer = method(undefined, get_timer);
        db.cloud_file_save = method(undefined, cloud_file_save);
        db.cloud_string_save = method(undefined, cloud_string_save);
        db.cloud_synchronise = method(undefined, cloud_synchronise);
        db.device_get_tilt_x = method(undefined, device_get_tilt_x);
        db.device_get_tilt_y = method(undefined, device_get_tilt_y);
        db.device_get_tilt_z = method(undefined, device_get_tilt_z);
        db.device_is_keypad_open = method(undefined, device_is_keypad_open);
        db.device_mouse_check_button = method(undefined, device_mouse_check_button);
        db.device_mouse_check_button_pressed = method(undefined, device_mouse_check_button_pressed);
        db.device_mouse_check_button_released = method(undefined, device_mouse_check_button_released);
        db.device_mouse_x = method(undefined, device_mouse_x);
        db.device_mouse_y = method(undefined, device_mouse_y);
        db.device_mouse_raw_x = method(undefined, device_mouse_raw_x);
        db.device_mouse_raw_y = method(undefined, device_mouse_raw_y);
        db.device_mouse_x_to_gui = method(undefined, device_mouse_x_to_gui);
        db.device_mouse_y_to_gui = method(undefined, device_mouse_y_to_gui);
        db.iap_activate = method(undefined, iap_activate);
        db.iap_status = method(undefined, iap_status);
        db.iap_enumerate_products = method(undefined, iap_enumerate_products);
        db.iap_restore_all = method(undefined, iap_restore_all);
        db.iap_acquire = method(undefined, iap_acquire);
        db.iap_consume = method(undefined, iap_consume);
        db.iap_product_details = method(undefined, iap_product_details);
        db.iap_purchase_details = method(undefined, iap_purchase_details);
        db.gamepad_is_supported = method(undefined, gamepad_is_supported);
        db.gamepad_get_device_count = method(undefined, gamepad_get_device_count);
        db.gamepad_is_connected = method(undefined, gamepad_is_connected);
        db.gamepad_get_description = method(undefined, gamepad_get_description);
        db.gamepad_get_button_threshold = method(undefined, gamepad_get_button_threshold);
        db.gamepad_set_button_threshold = method(undefined, gamepad_set_button_threshold);
        db.gamepad_get_axis_deadzone = method(undefined, gamepad_get_axis_deadzone);
        db.gamepad_set_axis_deadzone = method(undefined, gamepad_set_axis_deadzone);
        db.gamepad_button_count = method(undefined, gamepad_button_count);
        db.gamepad_button_check = method(undefined, gamepad_button_check);
        db.gamepad_button_check_pressed = method(undefined, gamepad_button_check_pressed);
        db.gamepad_button_check_released = method(undefined, gamepad_button_check_released);
        db.gamepad_button_value = method(undefined, gamepad_button_value);
        db.gamepad_axis_count = method(undefined, gamepad_axis_count);
        db.gamepad_axis_value = method(undefined, gamepad_axis_value);
        db.gamepad_set_vibration = method(undefined, gamepad_set_vibration);
        db.gamepad_set_colour = method(undefined, gamepad_set_colour);
        db.gamepad_set_color = method(undefined, gamepad_set_color);
        db.gamepad_hat_count = method(undefined, gamepad_hat_count);
        db.gamepad_hat_value = method(undefined, gamepad_hat_value);
        db.gamepad_remove_mapping = method(undefined, gamepad_remove_mapping);
        db.gamepad_test_mapping = method(undefined, gamepad_test_mapping);
        db.gamepad_get_mapping = method(undefined, gamepad_get_mapping);
        db.gamepad_get_guid = method(undefined, gamepad_get_guid);
        db.gamepad_set_option = method(undefined, gamepad_set_option);
        db.gamepad_get_option = method(undefined, gamepad_get_option);
        db.os_is_paused = method(undefined, os_is_paused);
        db.window_has_focus = method(undefined, window_has_focus);
        db.code_is_compiled = method(undefined, code_is_compiled);
        db.http_get = method(undefined, http_get);
        db.http_get_file = method(undefined, http_get_file);
        db.http_post_string = method(undefined, http_post_string);
        db.http_request = method(undefined, http_request);
        db.http_get_request_crossorigin = method(undefined, http_get_request_crossorigin);
        db.http_set_request_crossorigin = method(undefined, http_set_request_crossorigin);
        db.json_encode = method(undefined, json_encode);
        db.json_decode = method(undefined, json_decode);
        db.json_stringify = method(undefined, json_stringify);
        db.json_parse = method(undefined, json_parse);
        db.zip_unzip = method(undefined, zip_unzip);
        db.load_csv = method(undefined, load_csv);
        db.base64_encode = method(undefined, base64_encode);
        db.base64_decode = method(undefined, base64_decode);
        db.md5_string_unicode = method(undefined, md5_string_unicode);
        db.md5_string_utf8 = method(undefined, md5_string_utf8);
        db.md5_file = method(undefined, md5_file);
        db.os_is_network_connected = method(undefined, os_is_network_connected);
        db.sha1_string_unicode = method(undefined, sha1_string_unicode);
        db.sha1_string_utf8 = method(undefined, sha1_string_utf8);
        db.sha1_file = method(undefined, sha1_file);
        db.os_powersave_enable = method(undefined, os_powersave_enable);
        db.uwp_livetile_tile_clear = method(undefined, uwp_livetile_tile_clear);
        db.uwp_livetile_badge_notification = method(undefined, uwp_livetile_badge_notification);
        db.uwp_livetile_badge_clear = method(undefined, uwp_livetile_badge_clear);
        db.uwp_livetile_queue_enable = method(undefined, uwp_livetile_queue_enable);
        db.uwp_secondarytile_pin = method(undefined, uwp_secondarytile_pin);
        db.uwp_secondarytile_badge_notification = method(undefined, uwp_secondarytile_badge_notification);
        db.uwp_secondarytile_delete = method(undefined, uwp_secondarytile_delete);
        db.uwp_secondarytile_badge_clear = method(undefined, uwp_secondarytile_badge_clear);
        db.uwp_secondarytile_tile_clear = method(undefined, uwp_secondarytile_tile_clear);
        db.uwp_livetile_notification_begin = method(undefined, uwp_livetile_notification_begin);
        db.uwp_livetile_notification_secondary_begin = method(undefined, uwp_livetile_notification_secondary_begin);
        db.uwp_livetile_notification_expiry = method(undefined, uwp_livetile_notification_expiry);
        db.uwp_livetile_notification_tag = method(undefined, uwp_livetile_notification_tag);
        db.uwp_livetile_notification_text_add = method(undefined, uwp_livetile_notification_text_add);
        db.uwp_livetile_notification_image_add = method(undefined, uwp_livetile_notification_image_add);
        db.uwp_livetile_notification_end = method(undefined, uwp_livetile_notification_end);
        db.uwp_livetile_notification_template_add = method(undefined, uwp_livetile_notification_template_add);
        db.uwp_device_touchscreen_available = method(undefined, uwp_device_touchscreen_available);
        db.winphone_tile_background_colour = method(undefined, winphone_tile_background_colour);
        db.winphone_tile_background_color = method(undefined, winphone_tile_background_color);
        db.network_create_socket = method(undefined, network_create_socket);
        db.network_create_socket_ext = method(undefined, network_create_socket_ext);
        db.network_create_server = method(undefined, network_create_server);
        db.network_create_server_raw = method(undefined, network_create_server_raw);
        db.network_connect = method(undefined, network_connect);
        db.network_connect_raw = method(undefined, network_connect_raw);
        db.network_connect_async = method(undefined, network_connect_async);
        db.network_connect_raw_async = method(undefined, network_connect_raw_async);
        db.network_send_packet = method(undefined, network_send_packet);
        db.network_send_raw = method(undefined, network_send_raw);
        db.network_send_broadcast = method(undefined, network_send_broadcast);
        db.network_send_udp = method(undefined, network_send_udp);
        db.network_send_udp_raw = method(undefined, network_send_udp_raw);
        db.network_set_timeout = method(undefined, network_set_timeout);
        db.network_set_config = method(undefined, network_set_config);
        db.network_resolve = method(undefined, network_resolve);
        db.network_destroy = method(undefined, network_destroy);
        db.buffer_create = method(undefined, buffer_create);
        db.buffer_write = method(undefined, buffer_write);
        db.buffer_read = method(undefined, buffer_read);
        db.buffer_seek = method(undefined, buffer_seek);
        db.buffer_get_surface = method(undefined, buffer_get_surface);
        db.buffer_set_surface = method(undefined, buffer_set_surface);
        db.buffer_set_used_size = method(undefined, buffer_set_used_size);
        db.buffer_delete = method(undefined, buffer_delete);
        db.buffer_exists = method(undefined, buffer_exists);
        db.buffer_get_type = method(undefined, buffer_get_type);
        db.buffer_get_alignment = method(undefined, buffer_get_alignment);
        db.buffer_poke = method(undefined, buffer_poke);
        db.buffer_peek = method(undefined, buffer_peek);
        db.buffer_save = method(undefined, buffer_save);
        db.buffer_save_ext = method(undefined, buffer_save_ext);
        db.buffer_load = method(undefined, buffer_load);
        db.buffer_load_ext = method(undefined, buffer_load_ext);
        db.buffer_load_partial = method(undefined, buffer_load_partial);
        db.buffer_copy = method(undefined, buffer_copy);
        db.buffer_fill = method(undefined, buffer_fill);
        db.buffer_get_size = method(undefined, buffer_get_size);
        db.buffer_tell = method(undefined, buffer_tell);
        db.buffer_resize = method(undefined, buffer_resize);
        db.buffer_md5 = method(undefined, buffer_md5);
        db.buffer_sha1 = method(undefined, buffer_sha1);
        db.buffer_crc32 = method(undefined, buffer_crc32);
        db.buffer_base64_encode = method(undefined, buffer_base64_encode);
        db.buffer_base64_decode = method(undefined, buffer_base64_decode);
        db.buffer_base64_decode_ext = method(undefined, buffer_base64_decode_ext);
        db.buffer_sizeof = method(undefined, buffer_sizeof);
        db.buffer_get_address = method(undefined, buffer_get_address);
        db.buffer_create_from_vertex_buffer = method(undefined, buffer_create_from_vertex_buffer);
        db.buffer_create_from_vertex_buffer_ext = method(undefined, buffer_create_from_vertex_buffer_ext);
        db.buffer_copy_from_vertex_buffer = method(undefined, buffer_copy_from_vertex_buffer);
        db.buffer_async_group_begin = method(undefined, buffer_async_group_begin);
        db.buffer_async_group_option = method(undefined, buffer_async_group_option);
        db.buffer_async_group_end = method(undefined, buffer_async_group_end);
        db.buffer_load_async = method(undefined, buffer_load_async);
        db.buffer_save_async = method(undefined, buffer_save_async);
        db.buffer_compress = method(undefined, buffer_compress);
        db.buffer_decompress = method(undefined, buffer_decompress);
        db.shader_set = method(undefined, shader_set);
        db.shader_get_name = method(undefined, shader_get_name);
        db.shader_reset = method(undefined, shader_reset);
        db.shader_current = method(undefined, shader_current);
        db.shader_is_compiled = method(undefined, shader_is_compiled);
        db.shader_get_sampler_index = method(undefined, shader_get_sampler_index);
        db.shader_get_uniform = method(undefined, shader_get_uniform);
        db.shader_set_uniform_i = method(undefined, shader_set_uniform_i);
        db.shader_set_uniform_i_array = method(undefined, shader_set_uniform_i_array);
        db.shader_set_uniform_f = method(undefined, shader_set_uniform_f);
        db.shader_set_uniform_f_array = method(undefined, shader_set_uniform_f_array);
        db.shader_set_uniform_matrix = method(undefined, shader_set_uniform_matrix);
        db.shader_set_uniform_matrix_array = method(undefined, shader_set_uniform_matrix_array);
        db.shader_enable_corner_id = method(undefined, shader_enable_corner_id);
        db.texture_set_stage = method(undefined, texture_set_stage);
        db.texture_get_texel_width = method(undefined, texture_get_texel_width);
        db.texture_get_texel_height = method(undefined, texture_get_texel_height);
        db.shaders_are_supported = method(undefined, shaders_are_supported);
        db.vertex_format_begin = method(undefined, vertex_format_begin);
        db.vertex_format_end = method(undefined, vertex_format_end);
        db.vertex_format_delete = method(undefined, vertex_format_delete);
        db.vertex_format_add_position = method(undefined, vertex_format_add_position);
        db.vertex_format_add_position_3d = method(undefined, vertex_format_add_position_3d);
        db.vertex_format_add_colour = method(undefined, vertex_format_add_colour);
        db.vertex_format_add_color = method(undefined, vertex_format_add_color);
        db.vertex_format_add_normal = method(undefined, vertex_format_add_normal);
        db.vertex_format_add_texcoord = method(undefined, vertex_format_add_texcoord);
        db.vertex_format_add_custom = method(undefined, vertex_format_add_custom);
        db.vertex_create_buffer = method(undefined, vertex_create_buffer);
        db.vertex_create_buffer_ext = method(undefined, vertex_create_buffer_ext);
        db.vertex_delete_buffer = method(undefined, vertex_delete_buffer);
        db.vertex_begin = method(undefined, vertex_begin);
        db.vertex_end = method(undefined, vertex_end);
        db.vertex_position = method(undefined, vertex_position);
        db.vertex_position_3d = method(undefined, vertex_position_3d);
        db.vertex_colour = method(undefined, vertex_colour);
        db.vertex_color = method(undefined, vertex_color);
        db.vertex_argb = method(undefined, vertex_argb);
        db.vertex_texcoord = method(undefined, vertex_texcoord);
        db.vertex_normal = method(undefined, vertex_normal);
        db.vertex_float1 = method(undefined, vertex_float1);
        db.vertex_float2 = method(undefined, vertex_float2);
        db.vertex_float3 = method(undefined, vertex_float3);
        db.vertex_float4 = method(undefined, vertex_float4);
        db.vertex_ubyte4 = method(undefined, vertex_ubyte4);
        db.vertex_submit = method(undefined, vertex_submit);
        db.vertex_freeze = method(undefined, vertex_freeze);
        db.vertex_get_number = method(undefined, vertex_get_number);
        db.vertex_get_buffer_size = method(undefined, vertex_get_buffer_size);
        db.vertex_create_buffer_from_buffer = method(undefined, vertex_create_buffer_from_buffer);
        db.vertex_create_buffer_from_buffer_ext = method(undefined, vertex_create_buffer_from_buffer_ext);
        db.skeleton_animation_set = method(undefined, skeleton_animation_set);
        db.skeleton_animation_get = method(undefined, skeleton_animation_get);
        db.skeleton_animation_mix = method(undefined, skeleton_animation_mix);
        db.skeleton_animation_set_ext = method(undefined, skeleton_animation_set_ext);
        db.skeleton_animation_get_ext = method(undefined, skeleton_animation_get_ext);
        db.skeleton_animation_get_duration = method(undefined, skeleton_animation_get_duration);
        db.skeleton_animation_get_frames = method(undefined, skeleton_animation_get_frames);
        db.skeleton_animation_clear = method(undefined, skeleton_animation_clear);
        db.skeleton_skin_set = method(undefined, skeleton_skin_set);
        db.skeleton_skin_get = method(undefined, skeleton_skin_get);
        db.skeleton_skin_create = method(undefined, skeleton_skin_create);
        db.skeleton_attachment_set = method(undefined, skeleton_attachment_set);
        db.skeleton_attachment_get = method(undefined, skeleton_attachment_get);
        db.skeleton_attachment_create = method(undefined, skeleton_attachment_create);
        db.skeleton_attachment_create_colour = method(undefined, skeleton_attachment_create_colour);
        db.skeleton_attachment_create_color = method(undefined, skeleton_attachment_create_color);
        db.skeleton_collision_draw_set = method(undefined, skeleton_collision_draw_set);
        db.skeleton_bone_data_get = method(undefined, skeleton_bone_data_get);
        db.skeleton_bone_data_set = method(undefined, skeleton_bone_data_set);
        db.skeleton_bone_state_get = method(undefined, skeleton_bone_state_get);
        db.skeleton_bone_state_set = method(undefined, skeleton_bone_state_set);
        db.skeleton_slot_colour_set = method(undefined, skeleton_slot_colour_set);
        db.skeleton_slot_color_set = method(undefined, skeleton_slot_color_set);
        db.skeleton_slot_colour_get = method(undefined, skeleton_slot_colour_get);
        db.skeleton_slot_color_get = method(undefined, skeleton_slot_color_get);
        db.skeleton_slot_alpha_get = method(undefined, skeleton_slot_alpha_get);
        db.skeleton_find_slot = method(undefined, skeleton_find_slot);
        db.skeleton_get_minmax = method(undefined, skeleton_get_minmax);
        db.skeleton_get_num_bounds = method(undefined, skeleton_get_num_bounds);
        db.skeleton_get_bounds = method(undefined, skeleton_get_bounds);
        db.skeleton_animation_get_frame = method(undefined, skeleton_animation_get_frame);
        db.skeleton_animation_set_frame = method(undefined, skeleton_animation_set_frame);
        db.skeleton_animation_get_position = method(undefined, skeleton_animation_get_position);
        db.skeleton_animation_set_position = method(undefined, skeleton_animation_set_position);
        db.skeleton_animation_get_event_frames = method(undefined, skeleton_animation_get_event_frames);
        db.skeleton_animation_is_looping = method(undefined, skeleton_animation_is_looping);
        db.skeleton_animation_is_finished = method(undefined, skeleton_animation_is_finished);
        db.draw_skeleton = method(undefined, draw_skeleton);
        db.draw_skeleton_time = method(undefined, draw_skeleton_time);
        db.draw_skeleton_instance = method(undefined, draw_skeleton_instance);
        db.draw_skeleton_collision = method(undefined, draw_skeleton_collision);
        db.draw_enable_skeleton_blendmodes = method(undefined, draw_enable_skeleton_blendmodes);
        db.draw_get_enable_skeleton_blendmodes = method(undefined, draw_get_enable_skeleton_blendmodes);
        db.skeleton_animation_list = method(undefined, skeleton_animation_list);
        db.skeleton_skin_list = method(undefined, skeleton_skin_list);
        db.skeleton_bone_list = method(undefined, skeleton_bone_list);
        db.skeleton_slot_list = method(undefined, skeleton_slot_list);
        db.skeleton_slot_data = method(undefined, skeleton_slot_data);
        db.skeleton_slot_data_instance = method(undefined, skeleton_slot_data_instance);
        db.layer_get_id = method(undefined, layer_get_id);
        db.layer_get_id_at_depth = method(undefined, layer_get_id_at_depth);
        db.layer_get_depth = method(undefined, layer_get_depth);
        db.layer_create = method(undefined, layer_create);
        db.layer_destroy = method(undefined, layer_destroy);
        db.layer_destroy_instances = method(undefined, layer_destroy_instances);
        db.layer_add_instance = method(undefined, layer_add_instance);
        db.layer_has_instance = method(undefined, layer_has_instance);
        db.layer_set_visible = method(undefined, layer_set_visible);
        db.layer_get_visible = method(undefined, layer_get_visible);
        db.layer_exists = method(undefined, layer_exists);
        db.layer_x = method(undefined, layer_x);
        db.layer_y = method(undefined, layer_y);
        db.layer_get_x = method(undefined, layer_get_x);
        db.layer_get_y = method(undefined, layer_get_y);
        db.layer_hspeed = method(undefined, layer_hspeed);
        db.layer_vspeed = method(undefined, layer_vspeed);
        db.layer_get_hspeed = method(undefined, layer_get_hspeed);
        db.layer_get_vspeed = method(undefined, layer_get_vspeed);
        db.layer_script_begin = method(undefined, layer_script_begin);
        db.layer_script_end = method(undefined, layer_script_end);
        db.layer_shader = method(undefined, layer_shader);
        db.layer_get_script_begin = method(undefined, layer_get_script_begin);
        db.layer_get_script_end = method(undefined, layer_get_script_end);
        db.layer_get_shader = method(undefined, layer_get_shader);
        db.layer_set_target_room = method(undefined, layer_set_target_room);
        db.layer_get_target_room = method(undefined, layer_get_target_room);
        db.layer_reset_target_room = method(undefined, layer_reset_target_room);
        db.layer_get_all = method(undefined, layer_get_all);
        db.layer_get_all_elements = method(undefined, layer_get_all_elements);
        db.layer_get_name = method(undefined, layer_get_name);
        db.layer_depth = method(undefined, layer_depth);
        db.layer_get_element_layer = method(undefined, layer_get_element_layer);
        db.layer_get_element_type = method(undefined, layer_get_element_type);
        db.layer_element_move = method(undefined, layer_element_move);
        db.layer_force_draw_depth = method(undefined, layer_force_draw_depth);
        db.layer_is_draw_depth_forced = method(undefined, layer_is_draw_depth_forced);
        db.layer_get_forced_depth = method(undefined, layer_get_forced_depth);
        db.layer_background_get_id = method(undefined, layer_background_get_id);
        db.layer_background_exists = method(undefined, layer_background_exists);
        db.layer_background_create = method(undefined, layer_background_create);
        db.layer_background_destroy = method(undefined, layer_background_destroy);
        db.layer_background_visible = method(undefined, layer_background_visible);
        db.layer_background_change = method(undefined, layer_background_change);
        db.layer_background_sprite = method(undefined, layer_background_sprite);
        db.layer_background_htiled = method(undefined, layer_background_htiled);
        db.layer_background_vtiled = method(undefined, layer_background_vtiled);
        db.layer_background_stretch = method(undefined, layer_background_stretch);
        db.layer_background_yscale = method(undefined, layer_background_yscale);
        db.layer_background_xscale = method(undefined, layer_background_xscale);
        db.layer_background_blend = method(undefined, layer_background_blend);
        db.layer_background_alpha = method(undefined, layer_background_alpha);
        db.layer_background_index = method(undefined, layer_background_index);
        db.layer_background_speed = method(undefined, layer_background_speed);
        db.layer_background_get_visible = method(undefined, layer_background_get_visible);
        db.layer_background_get_sprite = method(undefined, layer_background_get_sprite);
        db.layer_background_get_htiled = method(undefined, layer_background_get_htiled);
        db.layer_background_get_vtiled = method(undefined, layer_background_get_vtiled);
        db.layer_background_get_stretch = method(undefined, layer_background_get_stretch);
        db.layer_background_get_yscale = method(undefined, layer_background_get_yscale);
        db.layer_background_get_xscale = method(undefined, layer_background_get_xscale);
        db.layer_background_get_blend = method(undefined, layer_background_get_blend);
        db.layer_background_get_alpha = method(undefined, layer_background_get_alpha);
        db.layer_background_get_index = method(undefined, layer_background_get_index);
        db.layer_background_get_speed = method(undefined, layer_background_get_speed);
        db.layer_sprite_get_id = method(undefined, layer_sprite_get_id);
        db.layer_sprite_exists = method(undefined, layer_sprite_exists);
        db.layer_sprite_create = method(undefined, layer_sprite_create);
        db.layer_sprite_destroy = method(undefined, layer_sprite_destroy);
        db.layer_sprite_change = method(undefined, layer_sprite_change);
        db.layer_sprite_index = method(undefined, layer_sprite_index);
        db.layer_sprite_speed = method(undefined, layer_sprite_speed);
        db.layer_sprite_xscale = method(undefined, layer_sprite_xscale);
        db.layer_sprite_yscale = method(undefined, layer_sprite_yscale);
        db.layer_sprite_angle = method(undefined, layer_sprite_angle);
        db.layer_sprite_blend = method(undefined, layer_sprite_blend);
        db.layer_sprite_alpha = method(undefined, layer_sprite_alpha);
        db.layer_sprite_x = method(undefined, layer_sprite_x);
        db.layer_sprite_y = method(undefined, layer_sprite_y);
        db.layer_sprite_get_sprite = method(undefined, layer_sprite_get_sprite);
        db.layer_sprite_get_index = method(undefined, layer_sprite_get_index);
        db.layer_sprite_get_speed = method(undefined, layer_sprite_get_speed);
        db.layer_sprite_get_xscale = method(undefined, layer_sprite_get_xscale);
        db.layer_sprite_get_yscale = method(undefined, layer_sprite_get_yscale);
        db.layer_sprite_get_angle = method(undefined, layer_sprite_get_angle);
        db.layer_sprite_get_blend = method(undefined, layer_sprite_get_blend);
        db.layer_sprite_get_alpha = method(undefined, layer_sprite_get_alpha);
        db.layer_sprite_get_x = method(undefined, layer_sprite_get_x);
        db.layer_sprite_get_y = method(undefined, layer_sprite_get_y);
        db.layer_tilemap_get_id = method(undefined, layer_tilemap_get_id);
        db.layer_tilemap_exists = method(undefined, layer_tilemap_exists);
        db.layer_tilemap_create = method(undefined, layer_tilemap_create);
        db.layer_tilemap_destroy = method(undefined, layer_tilemap_destroy);
        db.tilemap_tileset = method(undefined, tilemap_tileset);
        db.tilemap_x = method(undefined, tilemap_x);
        db.tilemap_y = method(undefined, tilemap_y);
        db.tilemap_set = method(undefined, tilemap_set);
        db.tilemap_set_at_pixel = method(undefined, tilemap_set_at_pixel);
        db.tileset_get_texture = method(undefined, tileset_get_texture);
        db.tileset_get_uvs = method(undefined, tileset_get_uvs);
        db.tileset_get_name = method(undefined, tileset_get_name);
        db.tilemap_get_tileset = method(undefined, tilemap_get_tileset);
        db.tilemap_get_tile_width = method(undefined, tilemap_get_tile_width);
        db.tilemap_get_tile_height = method(undefined, tilemap_get_tile_height);
        db.tilemap_get_width = method(undefined, tilemap_get_width);
        db.tilemap_get_height = method(undefined, tilemap_get_height);
        db.tilemap_set_width = method(undefined, tilemap_set_width);
        db.tilemap_set_height = method(undefined, tilemap_set_height);
        db.tilemap_get_x = method(undefined, tilemap_get_x);
        db.tilemap_get_y = method(undefined, tilemap_get_y);
        db.tilemap_get = method(undefined, tilemap_get);
        db.tilemap_get_at_pixel = method(undefined, tilemap_get_at_pixel);
        db.tilemap_get_cell_x_at_pixel = method(undefined, tilemap_get_cell_x_at_pixel);
        db.tilemap_get_cell_y_at_pixel = method(undefined, tilemap_get_cell_y_at_pixel);
        db.tilemap_clear = method(undefined, tilemap_clear);
        db.draw_tilemap = method(undefined, draw_tilemap);
        db.draw_tile = method(undefined, draw_tile);
        db.tilemap_set_global_mask = method(undefined, tilemap_set_global_mask);
        db.tilemap_get_global_mask = method(undefined, tilemap_get_global_mask);
        db.tilemap_set_mask = method(undefined, tilemap_set_mask);
        db.tilemap_get_mask = method(undefined, tilemap_get_mask);
        db.tilemap_get_frame = method(undefined, tilemap_get_frame);
        db.tile_set_empty = method(undefined, tile_set_empty);
        db.tile_set_index = method(undefined, tile_set_index);
        db.tile_set_flip = method(undefined, tile_set_flip);
        db.tile_set_mirror = method(undefined, tile_set_mirror);
        db.tile_set_rotate = method(undefined, tile_set_rotate);
        db.tile_get_empty = method(undefined, tile_get_empty);
        db.tile_get_index = method(undefined, tile_get_index);
        db.tile_get_flip = method(undefined, tile_get_flip);
        db.tile_get_mirror = method(undefined, tile_get_mirror);
        db.tile_get_rotate = method(undefined, tile_get_rotate);
        db.layer_instance_get_instance = method(undefined, layer_instance_get_instance);
        db.instance_activate_layer = method(undefined, instance_activate_layer);
        db.instance_deactivate_layer = method(undefined, instance_deactivate_layer);
        db.camera_create = method(undefined, camera_create);
        db.camera_create_view = method(undefined, camera_create_view);
        db.camera_destroy = method(undefined, camera_destroy);
        db.camera_apply = method(undefined, camera_apply);
        db.camera_get_active = method(undefined, camera_get_active);
        db.camera_get_default = method(undefined, camera_get_default);
        db.camera_set_default = method(undefined, camera_set_default);
        db.camera_set_view_mat = method(undefined, camera_set_view_mat);
        db.camera_set_proj_mat = method(undefined, camera_set_proj_mat);
        db.camera_set_update_script = method(undefined, camera_set_update_script);
        db.camera_set_begin_script = method(undefined, camera_set_begin_script);
        db.camera_set_end_script = method(undefined, camera_set_end_script);
        db.camera_set_view_pos = method(undefined, camera_set_view_pos);
        db.camera_set_view_size = method(undefined, camera_set_view_size);
        db.camera_set_view_speed = method(undefined, camera_set_view_speed);
        db.camera_set_view_border = method(undefined, camera_set_view_border);
        db.camera_set_view_angle = method(undefined, camera_set_view_angle);
        db.camera_set_view_target = method(undefined, camera_set_view_target);
        db.camera_get_view_mat = method(undefined, camera_get_view_mat);
        db.camera_get_proj_mat = method(undefined, camera_get_proj_mat);
        db.camera_get_update_script = method(undefined, camera_get_update_script);
        db.camera_get_begin_script = method(undefined, camera_get_begin_script);
        db.camera_get_end_script = method(undefined, camera_get_end_script);
        db.camera_get_view_x = method(undefined, camera_get_view_x);
        db.camera_get_view_y = method(undefined, camera_get_view_y);
        db.camera_get_view_width = method(undefined, camera_get_view_width);
        db.camera_get_view_height = method(undefined, camera_get_view_height);
        db.camera_get_view_speed_x = method(undefined, camera_get_view_speed_x);
        db.camera_get_view_speed_y = method(undefined, camera_get_view_speed_y);
        db.camera_get_view_border_x = method(undefined, camera_get_view_border_x);
        db.camera_get_view_border_y = method(undefined, camera_get_view_border_y);
        db.camera_get_view_angle = method(undefined, camera_get_view_angle);
        db.camera_get_view_target = method(undefined, camera_get_view_target);
        db.view_get_camera = method(undefined, view_get_camera);
        db.view_get_visible = method(undefined, view_get_visible);
        db.view_get_xport = method(undefined, view_get_xport);
        db.view_get_yport = method(undefined, view_get_yport);
        db.view_get_wport = method(undefined, view_get_wport);
        db.view_get_hport = method(undefined, view_get_hport);
        db.view_get_surface_id = method(undefined, view_get_surface_id);
        db.view_set_camera = method(undefined, view_set_camera);
        db.view_set_visible = method(undefined, view_set_visible);
        db.view_set_xport = method(undefined, view_set_xport);
        db.view_set_yport = method(undefined, view_set_yport);
        db.view_set_wport = method(undefined, view_set_wport);
        db.view_set_hport = method(undefined, view_set_hport);
        db.view_set_surface_id = method(undefined, view_set_surface_id);
        db.gesture_drag_time = method(undefined, gesture_drag_time);
        db.gesture_drag_distance = method(undefined, gesture_drag_distance);
        db.gesture_flick_speed = method(undefined, gesture_flick_speed);
        db.gesture_double_tap_time = method(undefined, gesture_double_tap_time);
        db.gesture_double_tap_distance = method(undefined, gesture_double_tap_distance);
        db.gesture_pinch_distance = method(undefined, gesture_pinch_distance);
        db.gesture_pinch_angle_towards = method(undefined, gesture_pinch_angle_towards);
        db.gesture_pinch_angle_away = method(undefined, gesture_pinch_angle_away);
        db.gesture_rotate_time = method(undefined, gesture_rotate_time);
        db.gesture_rotate_angle = method(undefined, gesture_rotate_angle);
        db.gesture_tap_count = method(undefined, gesture_tap_count);
        db.gesture_get_drag_time = method(undefined, gesture_get_drag_time);
        db.gesture_get_drag_distance = method(undefined, gesture_get_drag_distance);
        db.gesture_get_flick_speed = method(undefined, gesture_get_flick_speed);
        db.gesture_get_double_tap_time = method(undefined, gesture_get_double_tap_time);
        db.gesture_get_double_tap_distance = method(undefined, gesture_get_double_tap_distance);
        db.gesture_get_pinch_distance = method(undefined, gesture_get_pinch_distance);
        db.gesture_get_pinch_angle_towards = method(undefined, gesture_get_pinch_angle_towards);
        db.gesture_get_pinch_angle_away = method(undefined, gesture_get_pinch_angle_away);
        db.gesture_get_rotate_time = method(undefined, gesture_get_rotate_time);
        db.gesture_get_rotate_angle = method(undefined, gesture_get_rotate_angle);
        db.gesture_get_tap_count = method(undefined, gesture_get_tap_count);
        db.keyboard_virtual_show = method(undefined, keyboard_virtual_show);
        db.keyboard_virtual_hide = method(undefined, keyboard_virtual_hide);
        db.keyboard_virtual_status = method(undefined, keyboard_virtual_status);
        db.keyboard_virtual_height = method(undefined, keyboard_virtual_height);
        db.tag_get_asset_ids = method(undefined, tag_get_asset_ids);
        db.tag_get_assets = method(undefined, tag_get_assets);
        db.asset_get_tags = method(undefined, asset_get_tags);
        db.asset_add_tags = method(undefined, asset_add_tags);
        db.asset_remove_tags = method(undefined, asset_remove_tags);
        db.asset_has_tags = method(undefined, asset_has_tags);
        db.asset_has_any_tag = method(undefined, asset_has_any_tag);
        db.asset_clear_tags = method(undefined, asset_clear_tags);
        db.extension_exists = method(undefined, extension_exists);
        db.extension_get_option_count = method(undefined, extension_get_option_count);
        db.extension_get_option_names = method(undefined, extension_get_option_names);
        db.extension_get_option_value = method(undefined, extension_get_option_value);
        db.extension_get_options = method(undefined, extension_get_options);
        db.layer_sequence_get_instance = method(undefined, layer_sequence_get_instance);
        db.layer_sequence_create = method(undefined, layer_sequence_create);
        db.layer_sequence_destroy = method(undefined, layer_sequence_destroy);
        db.layer_sequence_exists = method(undefined, layer_sequence_exists);
        db.layer_sequence_x = method(undefined, layer_sequence_x);
        db.layer_sequence_y = method(undefined, layer_sequence_y);
        db.layer_sequence_angle = method(undefined, layer_sequence_angle);
        db.layer_sequence_xscale = method(undefined, layer_sequence_xscale);
        db.layer_sequence_yscale = method(undefined, layer_sequence_yscale);
        db.layer_sequence_headpos = method(undefined, layer_sequence_headpos);
        db.layer_sequence_headdir = method(undefined, layer_sequence_headdir);
        db.layer_sequence_pause = method(undefined, layer_sequence_pause);
        db.layer_sequence_play = method(undefined, layer_sequence_play);
        db.layer_sequence_speedscale = method(undefined, layer_sequence_speedscale);
        db.layer_sequence_get_x = method(undefined, layer_sequence_get_x);
        db.layer_sequence_get_y = method(undefined, layer_sequence_get_y);
        db.layer_sequence_get_angle = method(undefined, layer_sequence_get_angle);
        db.layer_sequence_get_xscale = method(undefined, layer_sequence_get_xscale);
        db.layer_sequence_get_yscale = method(undefined, layer_sequence_get_yscale);
        db.layer_sequence_get_headpos = method(undefined, layer_sequence_get_headpos);
        db.layer_sequence_get_headdir = method(undefined, layer_sequence_get_headdir);
        db.layer_sequence_get_sequence = method(undefined, layer_sequence_get_sequence);
        db.layer_sequence_is_paused = method(undefined, layer_sequence_is_paused);
        db.layer_sequence_is_finished = method(undefined, layer_sequence_is_finished);
        db.layer_sequence_get_speedscale = method(undefined, layer_sequence_get_speedscale);
        db.layer_sequence_get_length = method(undefined, layer_sequence_get_length);
        db.animcurve_get = method(undefined, animcurve_get);
        db.animcurve_get_channel = method(undefined, animcurve_get_channel);
        db.animcurve_get_channel_index = method(undefined, animcurve_get_channel_index);
        db.animcurve_channel_evaluate = method(undefined, animcurve_channel_evaluate);
        db.sequence_create = method(undefined, sequence_create);
        db.sequence_destroy = method(undefined, sequence_destroy);
        db.sequence_exists = method(undefined, sequence_exists);
        db.sequence_get = method(undefined, sequence_get);
        db.sequence_keyframe_new = method(undefined, sequence_keyframe_new);
        db.sequence_keyframedata_new = method(undefined, sequence_keyframedata_new);
        db.sequence_track_new = method(undefined, sequence_track_new);
        db.sequence_get_objects = method(undefined, sequence_get_objects);
        db.sequence_instance_override_object = method(undefined, sequence_instance_override_object);
        db.animcurve_create = method(undefined, animcurve_create);
        db.animcurve_destroy = method(undefined, animcurve_destroy);
        db.animcurve_exists = method(undefined, animcurve_exists);
        db.animcurve_channel_new = method(undefined, animcurve_channel_new);
        db.animcurve_point_new = method(undefined, animcurve_point_new);
        db.fx_create = method(undefined, fx_create);
        db.fx_get_name = method(undefined, fx_get_name);
        db.fx_get_parameter_names = method(undefined, fx_get_parameter_names);
        db.fx_get_parameter = method(undefined, fx_get_parameter);
        db.fx_get_parameters = method(undefined, fx_get_parameters);
        db.fx_get_single_layer = method(undefined, fx_get_single_layer);
        db.fx_set_parameter = method(undefined, fx_set_parameter);
        db.fx_set_parameters = method(undefined, fx_set_parameters);
        db.fx_set_single_layer = method(undefined, fx_set_single_layer);
        db.layer_set_fx = method(undefined, layer_set_fx);
        db.layer_get_fx = method(undefined, layer_get_fx);
        db.layer_clear_fx = method(undefined, layer_clear_fx);
        db.layer_enable_fx = method(undefined, layer_enable_fx);
        db.layer_fx_is_enabled = method(undefined, layer_fx_is_enabled);
        db.gc_collect = method(undefined, gc_collect);
        db.gc_enable = method(undefined, gc_enable);
        db.gc_is_enabled = method(undefined, gc_is_enabled);
        db.gc_get_stats = method(undefined, gc_get_stats);
        db.gc_target_frame_time = method(undefined, gc_target_frame_time);
        db.gc_get_target_frame_time = method(undefined, gc_get_target_frame_time);
        db.weak_ref_create = method(undefined, weak_ref_create);
        db.weak_ref_alive = method(undefined, weak_ref_alive);
        db.weak_ref_any_alive = method(undefined, weak_ref_any_alive);
        db.time_source_create = method(undefined, time_source_create);
        db.time_source_destroy = method(undefined, time_source_destroy);
        db.time_source_start = method(undefined, time_source_start);
        db.time_source_stop = method(undefined, time_source_stop);
        db.time_source_pause = method(undefined, time_source_pause);
        db.time_source_resume = method(undefined, time_source_resume);
        db.time_source_reset = method(undefined, time_source_reset);
        db.time_source_reconfigure = method(undefined, time_source_reconfigure);
        db.time_source_get_period = method(undefined, time_source_get_period);
        db.time_source_get_reps_completed = method(undefined, time_source_get_reps_completed);
        db.time_source_get_reps_remaining = method(undefined, time_source_get_reps_remaining);
        db.time_source_get_units = method(undefined, time_source_get_units);
        db.time_source_get_time_remaining = method(undefined, time_source_get_time_remaining);
        db.time_source_get_state = method(undefined, time_source_get_state);
        db.time_source_get_parent = method(undefined, time_source_get_parent);
        db.time_source_get_children = method(undefined, time_source_get_children);
        db.time_source_exists = method(undefined, time_source_exists);
        db.time_seconds_to_bpm = method(undefined, time_seconds_to_bpm);
        db.time_bpm_to_seconds = method(undefined, time_bpm_to_seconds);
        db.call_later = method(undefined, call_later);
        db.call_cancel = method(undefined, call_cancel);
        db.self = self;
        db.other = other;
        db.all = -3;
        db.noone = -4;
        db.global = global;
        db.undefined = undefined;
        db.pointer_invalid = pointer_invalid;
        db.pointer_null = pointer_null;
        db.path_action_stop = 0;
        db.path_action_restart = 1;
        db.path_action_continue = 2;
        db.path_action_reverse = 3;
        db.true = true;
        db.false = false;
        db.pi = pi;
        db.NaN = NaN;
        db.infinity = infinity;
        db.GM_build_date = 45923.35663120267;
        db.GM_version = "1.0.0.0";
        db.GM_runtime_version = "2024.11.0.226";
        db.GM_project_filename = "C:\\Users\\carbo\\Documents\\GameMakerStudio2\\ZERO_Sievert\\Project\\ZERO_Sievert.yyp\\ZERO_Sievert.yyp";
        db.GM_build_type = "exe";
        db.timezone_local = 0;
        db.timezone_utc = 1;
        db.gamespeed_fps = 0;
        db.gamespeed_microseconds = 1;
        db.ev_create = 0;
        db.ev_pre_create = 14;
        db.ev_destroy = 1;
        db.ev_step = 3;
        db.ev_alarm = 2;
        db.ev_keyboard = 5;
        db.ev_mouse = 6;
        db.ev_collision = 4;
        db.ev_other = 7;
        db.ev_draw = 8;
        db.ev_draw_begin = 72;
        db.ev_draw_end = 73;
        db.ev_draw_pre = 76;
        db.ev_draw_post = 77;
        db.ev_keypress = 9;
        db.ev_keyrelease = 10;
        db.ev_trigger = 11;
        db.ev_left_button = 0;
        db.ev_right_button = 1;
        db.ev_middle_button = 2;
        db.ev_no_button = 3;
        db.ev_left_press = 4;
        db.ev_right_press = 5;
        db.ev_middle_press = 6;
        db.ev_left_release = 7;
        db.ev_right_release = 8;
        db.ev_middle_release = 9;
        db.ev_mouse_enter = 10;
        db.ev_mouse_leave = 11;
        db.ev_mouse_wheel_up = 60;
        db.ev_mouse_wheel_down = 61;
        db.ev_global_left_button = 50;
        db.ev_global_right_button = 51;
        db.ev_global_middle_button = 52;
        db.ev_global_left_press = 53;
        db.ev_global_right_press = 54;
        db.ev_global_middle_press = 55;
        db.ev_global_left_release = 56;
        db.ev_global_right_release = 57;
        db.ev_global_middle_release = 58;
        db.ev_joystick1_left = 16;
        db.ev_joystick1_right = 17;
        db.ev_joystick1_up = 18;
        db.ev_joystick1_down = 19;
        db.ev_joystick1_button1 = 21;
        db.ev_joystick1_button2 = 22;
        db.ev_joystick1_button3 = 23;
        db.ev_joystick1_button4 = 24;
        db.ev_joystick1_button5 = 25;
        db.ev_joystick1_button6 = 26;
        db.ev_joystick1_button7 = 27;
        db.ev_joystick1_button8 = 28;
        db.ev_joystick2_left = 31;
        db.ev_joystick2_right = 32;
        db.ev_joystick2_up = 33;
        db.ev_joystick2_down = 34;
        db.ev_joystick2_button1 = 36;
        db.ev_joystick2_button2 = 37;
        db.ev_joystick2_button3 = 38;
        db.ev_joystick2_button4 = 39;
        db.ev_joystick2_button5 = 40;
        db.ev_joystick2_button6 = 41;
        db.ev_joystick2_button7 = 42;
        db.ev_joystick2_button8 = 43;
        db.ev_outside = 0;
        db.ev_boundary = 1;
        db.ev_game_start = 2;
        db.ev_game_end = 3;
        db.ev_room_start = 4;
        db.ev_room_end = 5;
        db.ev_no_more_lives = 6;
        db.ev_animation_end = 7;
        db.ev_end_of_path = 8;
        db.ev_no_more_health = 9;
        db.ev_user0 = 10;
        db.ev_user1 = 11;
        db.ev_user2 = 12;
        db.ev_user3 = 13;
        db.ev_user4 = 14;
        db.ev_user5 = 15;
        db.ev_user6 = 16;
        db.ev_user7 = 17;
        db.ev_user8 = 18;
        db.ev_user9 = 19;
        db.ev_user10 = 20;
        db.ev_user11 = 21;
        db.ev_user12 = 22;
        db.ev_user13 = 23;
        db.ev_user14 = 24;
        db.ev_user15 = 25;
        db.ev_outside_view0 = 40;
        db.ev_outside_view1 = 41;
        db.ev_outside_view2 = 42;
        db.ev_outside_view3 = 43;
        db.ev_outside_view4 = 44;
        db.ev_outside_view5 = 45;
        db.ev_outside_view6 = 46;
        db.ev_outside_view7 = 47;
        db.ev_boundary_view0 = 50;
        db.ev_boundary_view1 = 51;
        db.ev_boundary_view2 = 52;
        db.ev_boundary_view3 = 53;
        db.ev_boundary_view4 = 54;
        db.ev_boundary_view5 = 55;
        db.ev_boundary_view6 = 56;
        db.ev_boundary_view7 = 57;
        db.ev_animation_update = 58;
        db.ev_animation_event = 59;
        db.ev_web_image_load = 60;
        db.ev_web_sound_load = 61;
        db.ev_web_async = 62;
        db.ev_dialog_async = 63;
        db.ev_web_iap = 66;
        db.ev_web_cloud = 67;
        db.ev_web_networking = 68;
        db.ev_web_steam = 69;
        db.ev_social = 70;
        db.ev_push_notification = 71;
        db.ev_async_save_load = 72;
        db.ev_audio_recording = 73;
        db.ev_audio_playback = 74;
        db.ev_system_event = 75;
        db.ev_broadcast_message = 76;
        db.ev_step_normal = 0;
        db.ev_step_begin = 1;
        db.ev_step_end = 2;
        db.ev_gui = 64;
        db.ev_gui_begin = 74;
        db.ev_gui_end = 75;
        db.ev_cleanup = 12;
        db.ev_gesture = 13;
        db.ev_gesture_tap = 0;
        db.ev_gesture_double_tap = 1;
        db.ev_gesture_drag_start = 2;
        db.ev_gesture_dragging = 3;
        db.ev_gesture_drag_end = 4;
        db.ev_gesture_flick = 5;
        db.ev_gesture_pinch_start = 6;
        db.ev_gesture_pinch_in = 7;
        db.ev_gesture_pinch_out = 8;
        db.ev_gesture_pinch_end = 9;
        db.ev_gesture_rotate_start = 10;
        db.ev_gesture_rotating = 11;
        db.ev_gesture_rotate_end = 12;
        db.ev_global_gesture_tap = 64;
        db.ev_global_gesture_double_tap = 65;
        db.ev_global_gesture_drag_start = 66;
        db.ev_global_gesture_dragging = 67;
        db.ev_global_gesture_drag_end = 68;
        db.ev_global_gesture_flick = 69;
        db.ev_global_gesture_pinch_start = 70;
        db.ev_global_gesture_pinch_in = 71;
        db.ev_global_gesture_pinch_out = 72;
        db.ev_global_gesture_pinch_end = 73;
        db.ev_global_gesture_rotate_start = 74;
        db.ev_global_gesture_rotating = 75;
        db.ev_global_gesture_rotate_end = 76;
        db.ev_async_web_image_load = 60;
        db.ev_async_web = 62;
        db.ev_async_dialog = 63;
        db.ev_async_web_iap = 66;
        db.ev_async_web_cloud = 67;
        db.ev_async_web_networking = 68;
        db.ev_async_web_steam = 69;
        db.ev_async_social = 70;
        db.ev_async_push_notification = 71;
        db.ev_async_save_load = 72;
        db.ev_async_audio_recording = 73;
        db.ev_async_audio_playback = 74;
        db.ev_async_system_event = 75;
        db.vk_nokey = 0;
        db.vk_anykey = 1;
        db.vk_enter = 13;
        db.vk_return = 13;
        db.vk_shift = 16;
        db.vk_control = 17;
        db.vk_alt = 18;
        db.vk_escape = 27;
        db.vk_space = 32;
        db.vk_backspace = 8;
        db.vk_tab = 9;
        db.vk_pause = 19;
        db.vk_printscreen = 44;
        db.vk_left = 37;
        db.vk_right = 39;
        db.vk_up = 38;
        db.vk_down = 40;
        db.vk_home = 36;
        db.vk_end = 35;
        db.vk_delete = 46;
        db.vk_insert = 45;
        db.vk_pageup = 33;
        db.vk_pagedown = 34;
        db.vk_f1 = 112;
        db.vk_f2 = 113;
        db.vk_f3 = 114;
        db.vk_f4 = 115;
        db.vk_f5 = 116;
        db.vk_f6 = 117;
        db.vk_f7 = 118;
        db.vk_f8 = 119;
        db.vk_f9 = 120;
        db.vk_f10 = 121;
        db.vk_f11 = 122;
        db.vk_f12 = 123;
        db.vk_numpad0 = 96;
        db.vk_numpad1 = 97;
        db.vk_numpad2 = 98;
        db.vk_numpad3 = 99;
        db.vk_numpad4 = 100;
        db.vk_numpad5 = 101;
        db.vk_numpad6 = 102;
        db.vk_numpad7 = 103;
        db.vk_numpad8 = 104;
        db.vk_numpad9 = 105;
        db.vk_divide = 111;
        db.vk_multiply = 106;
        db.vk_subtract = 109;
        db.vk_add = 107;
        db.vk_decimal = 110;
        db.vk_lshift = 160;
        db.vk_lcontrol = 162;
        db.vk_lalt = 164;
        db.vk_rshift = 161;
        db.vk_rcontrol = 163;
        db.vk_ralt = 165;
        db.mb_any = -1;
        db.mb_none = 0;
        db.mb_left = 1;
        db.mb_right = 2;
        db.mb_middle = 3;
        db.mb_side1 = 4;
        db.mb_side2 = 5;
        db.m_axisx = 40960;
        db.m_axisy = 40961;
        db.m_axisx_gui = 40962;
        db.m_axisy_gui = 40963;
        db.m_scroll_up = 40964;
        db.m_scroll_down = 40965;
        db.bboxmode_automatic = 0;
        db.bboxmode_fullimage = 1;
        db.bboxmode_manual = 2;
        db.bboxkind_precise = 0;
        db.bboxkind_rectangular = 1;
        db.bboxkind_ellipse = 2;
        db.bboxkind_diamond = 3;
        db.c_aqua = 16776960;
        db.c_black = 0;
        db.c_blue = 16711680;
        db.c_dkgray = 4210752;
        db.c_dkgrey = 4210752;
        db.c_fuchsia = 16711935;
        db.c_gray = 8421504;
        db.c_grey = 8421504;
        db.c_green = 32768;
        db.c_lime = 65280;
        db.c_ltgray = 12632256;
        db.c_ltgrey = 12632256;
        db.c_maroon = 128;
        db.c_navy = 8388608;
        db.c_olive = 32896;
        db.c_purple = 8388736;
        db.c_red = 255;
        db.c_silver = 12632256;
        db.c_teal = 8421376;
        db.c_white = 16777215;
        db.c_yellow = 65535;
        db.c_orange = 4235519;
        db.fa_left = 0;
        db.fa_center = 1;
        db.fa_right = 2;
        db.fa_top = 0;
        db.fa_middle = 1;
        db.fa_bottom = 2;
        db.pr_pointlist = 1;
        db.pr_linelist = 2;
        db.pr_linestrip = 3;
        db.pr_trianglelist = 4;
        db.pr_trianglestrip = 5;
        db.pr_trianglefan = 6;
        db.bm_normal = 0;
        db.bm_add = 1;
        db.bm_max = 2;
        db.bm_subtract = 3;
        db.bm_zero = 1;
        db.bm_one = 2;
        db.bm_src_colour = 3;
        db.bm_inv_src_colour = 4;
        db.bm_src_color = 3;
        db.bm_inv_src_color = 4;
        db.bm_src_alpha = 5;
        db.bm_inv_src_alpha = 6;
        db.bm_dest_alpha = 7;
        db.bm_inv_dest_alpha = 8;
        db.bm_dest_colour = 9;
        db.bm_inv_dest_colour = 10;
        db.bm_dest_color = 9;
        db.bm_inv_dest_color = 10;
        db.bm_src_alpha_sat = 11;
        db.tf_point = 0;
        db.tf_linear = 1;
        db.tf_anisotropic = 2;
        db.mip_off = 0;
        db.mip_on = 1;
        db.mip_markedonly = 2;
        db.audio_falloff_none = 0;
        db.audio_falloff_inverse_distance = 1;
        db.audio_falloff_inverse_distance_clamped = 2;
        db.audio_falloff_inverse_distance_scaled = 7;
        db.audio_falloff_linear_distance = 3;
        db.audio_falloff_linear_distance_clamped = 4;
        db.audio_falloff_exponent_distance = 5;
        db.audio_falloff_exponent_distance_clamped = 6;
        db.audio_falloff_exponent_distance_scaled = 8;
        db.audio_mono = 0;
        db.audio_stereo = 1;
        db.audio_3d = 2;
        db.video_format_rgba = 0;
        db.video_format_yuv = 1;
        db.video_status_closed = 0;
        db.video_status_preparing = 1;
        db.video_status_playing = 2;
        db.video_status_paused = 3;
        db.cr_default = 0;
        db.cr_none = -1;
        db.cr_arrow = -2;
        db.cr_cross = -3;
        db.cr_beam = -4;
        db.cr_size_nesw = -6;
        db.cr_size_ns = -7;
        db.cr_size_nwse = -8;
        db.cr_size_we = -9;
        db.cr_uparrow = -10;
        db.cr_hourglass = -11;
        db.cr_drag = -12;
        db.cr_appstart = -19;
        db.cr_handpoint = -21;
        db.cr_size_all = -22;
        db.spritespeed_framespersecond = 0;
        db.spritespeed_framespergameframe = 1;
        db.asset_object = 0;
        db.asset_unknown = -1;
        db.asset_sprite = 1;
        db.asset_sound = 2;
        db.asset_room = 3;
        db.asset_path = 4;
        db.asset_script = 5;
        db.asset_font = 6;
        db.asset_timeline = 7;
        db.asset_tiles = 13;
        db.asset_shader = 8;
        db.asset_sequence = 9;
        db.asset_animationcurve = 10;
        db.fa_readonly = 1;
        db.fa_hidden = 2;
        db.fa_sysfile = 4;
        db.fa_volumeid = 8;
        db.fa_directory = 16;
        db.fa_archive = 32;
        db.ds_type_map = 1;
        db.ds_type_list = 2;
        db.ds_type_stack = 3;
        db.ds_type_queue = 4;
        db.ds_type_grid = 5;
        db.ds_type_priority = 6;
        db.ef_explosion = 0;
        db.ef_ring = 1;
        db.ef_ellipse = 2;
        db.ef_firework = 3;
        db.ef_smoke = 4;
        db.ef_smokeup = 5;
        db.ef_star = 6;
        db.ef_spark = 7;
        db.ef_flare = 8;
        db.ef_cloud = 9;
        db.ef_rain = 10;
        db.ef_snow = 11;
        db.pt_shape_pixel = 0;
        db.pt_shape_disk = 1;
        db.pt_shape_square = 2;
        db.pt_shape_line = 3;
        db.pt_shape_star = 4;
        db.pt_shape_circle = 5;
        db.pt_shape_ring = 6;
        db.pt_shape_sphere = 7;
        db.pt_shape_flare = 8;
        db.pt_shape_spark = 9;
        db.pt_shape_explosion = 10;
        db.pt_shape_cloud = 11;
        db.pt_shape_smoke = 12;
        db.pt_shape_snow = 13;
        db.ps_distr_linear = 0;
        db.ps_distr_gaussian = 1;
        db.ps_distr_invgaussian = 2;
        db.ps_shape_rectangle = 0;
        db.ps_shape_ellipse = 1;
        db.ps_shape_diamond = 2;
        db.ps_shape_line = 3;
        db.ty_real = 0;
        db.ty_string = 1;
        db.dll_cdecl = 0;
        db.dll_stdcall = 1;
        db.matrix_view = 0;
        db.matrix_projection = 1;
        db.matrix_world = 2;
        db.os_windows = 0;
        db.os_macosx = 1;
        db.os_ios = 3;
        db.os_android = 4;
        db.os_linux = 6;
        db.os_unknown = -1;
        db.os_winphone = 7;
        db.os_win8native = 9;
        db.os_psvita = 12;
        db.os_ps4 = 14;
        db.os_xboxone = 15;
        db.os_ps3 = 16;
        db.os_uwp = 18;
        db.os_tvos = 20;
        db.os_switch = 21;
        db.os_ps5 = 22;
        db.os_xboxseriesxs = 23;
        db.os_gdk = 23;
        db.os_operagx = 24;
        db.os_gxgames = 24;
        db.browser_not_a_browser = -1;
        db.browser_unknown = 0;
        db.browser_ie = 1;
        db.browser_firefox = 2;
        db.browser_chrome = 3;
        db.browser_safari = 4;
        db.browser_safari_mobile = 5;
        db.browser_opera = 6;
        db.browser_tizen = 9;
        db.browser_edge = 11;
        db.browser_windows_store = 8;
        db.browser_ie_mobile = 10;
        db.device_ios_unknown = -1;
        db.device_ios_iphone = 0;
        db.device_ios_iphone_retina = 1;
        db.device_ios_ipad = 2;
        db.device_ios_ipad_retina = 3;
        db.device_ios_iphone5 = 4;
        db.device_ios_iphone6 = 5;
        db.device_ios_iphone6plus = 6;
        db.device_emulator = 256;
        db.device_tablet = 2;
        db.display_landscape = 0;
        db.display_landscape_flipped = 2;
        db.display_portrait = 1;
        db.display_portrait_flipped = 3;
        db.tm_sleep = 0;
        db.tm_countvsyncs = 1;
        db.of_challenge_win = 0;
        db.of_challenge_lose = 1;
        db.of_challenge_tie = 2;
        db.leaderboard_type_number = 0;
        db.leaderboard_type_time_mins_secs = 1;
        db.cmpfunc_never = 1;
        db.cmpfunc_less = 2;
        db.cmpfunc_equal = 3;
        db.cmpfunc_lessequal = 4;
        db.cmpfunc_greater = 5;
        db.cmpfunc_notequal = 6;
        db.cmpfunc_greaterequal = 7;
        db.cmpfunc_always = 8;
        db.cull_noculling = 0;
        db.cull_clockwise = 1;
        db.cull_counterclockwise = 2;
        db.lighttype_dir = 0;
        db.lighttype_point = 1;
        db.iap_ev_storeload = 0;
        db.iap_ev_product = 1;
        db.iap_ev_purchase = 2;
        db.iap_ev_consume = 3;
        db.iap_ev_restore = 4;
        db.iap_storeload_ok = 0;
        db.iap_storeload_failed = -1;
        db.iap_status_uninitialised = -2;
        db.iap_status_unavailable = -1;
        db.iap_status_loading = 0;
        db.iap_status_available = 1;
        db.iap_status_processing = 2;
        db.iap_status_restoring = 3;
        db.iap_failed = -3;
        db.iap_unavailable = -2;
        db.iap_available = -1;
        db.iap_purchased = 0;
        db.iap_canceled = 1;
        db.iap_refunded = 2;
        db.network_socket_tcp = 0;
        db.network_socket_udp = 1;
        db.network_socket_ws = 6;
        db.network_socket_wss = 7;
        db.network_socket_bluetooth = 2;
        db.network_type_connect = 1;
        db.network_type_disconnect = 2;
        db.network_type_data = 3;
        db.network_type_non_blocking_connect = 4;
        db.network_type_up = 5;
        db.network_type_up_failed = 6;
        db.network_type_down = 7;
        db.network_send_binary = 1;
        db.network_send_text = 2;
        db.network_config_connect_timeout = 0;
        db.network_config_use_non_blocking_socket = 1;
        db.network_config_enable_reliable_udp = 2;
        db.network_config_disable_reliable_udp = 3;
        db.network_config_avoid_time_wait = 4;
        db.network_config_websocket_protocol = 5;
        db.network_connect_none = 0;
        db.network_connect_blocking = 1;
        db.network_connect_nonblocking = 2;
        db.buffer_fixed = 0;
        db.buffer_grow = 1;
        db.buffer_wrap = 2;
        db.buffer_fast = 3;
        db.buffer_vbuffer = 4;
        db.buffer_u8 = 1;
        db.buffer_s8 = 2;
        db.buffer_u16 = 3;
        db.buffer_s16 = 4;
        db.buffer_u32 = 5;
        db.buffer_s32 = 6;
        db.buffer_u64 = 12;
        db.buffer_f16 = 7;
        db.buffer_f32 = 8;
        db.buffer_f64 = 9;
        db.buffer_bool = 10;
        db.buffer_text = 13;
        db.buffer_string = 11;
        db.buffer_seek_start = 0;
        db.buffer_seek_relative = 1;
        db.buffer_seek_end = 2;
        db.gp_face1 = 32769;
        db.gp_face2 = 32770;
        db.gp_face3 = 32771;
        db.gp_face4 = 32772;
        db.gp_shoulderl = 32773;
        db.gp_shoulderr = 32774;
        db.gp_shoulderlb = 32775;
        db.gp_shoulderrb = 32776;
        db.gp_select = 32777;
        db.gp_start = 32778;
        db.gp_stickl = 32779;
        db.gp_stickr = 32780;
        db.gp_padu = 32781;
        db.gp_padd = 32782;
        db.gp_padl = 32783;
        db.gp_padr = 32784;
        db.gp_axislh = 32785;
        db.gp_axislv = 32786;
        db.gp_axisrh = 32787;
        db.gp_axisrv = 32788;
        db.gp_axis_acceleration_x = 32789;
        db.gp_axis_acceleration_y = 32790;
        db.gp_axis_acceleration_z = 32791;
        db.gp_axis_angular_velocity_x = 32792;
        db.gp_axis_angular_velocity_y = 32793;
        db.gp_axis_angular_velocity_z = 32794;
        db.gp_axis_orientation_x = 32795;
        db.gp_axis_orientation_y = 32796;
        db.gp_axis_orientation_z = 32797;
        db.gp_axis_orientation_w = 32798;
        db.vertex_usage_position = 1;
        db.vertex_usage_colour = 2;
        db.vertex_usage_color = 2;
        db.vertex_usage_normal = 3;
        db.vertex_usage_texcoord = 4;
        db.vertex_usage_blendweight = 5;
        db.vertex_usage_blendindices = 6;
        db.vertex_usage_psize = 7;
        db.vertex_usage_tangent = 8;
        db.vertex_usage_binormal = 9;
        db.vertex_usage_fog = 12;
        db.vertex_usage_depth = 13;
        db.vertex_usage_sample = 14;
        db.vertex_type_float1 = 1;
        db.vertex_type_float2 = 2;
        db.vertex_type_float3 = 3;
        db.vertex_type_float4 = 4;
        db.vertex_type_colour = 5;
        db.vertex_type_color = 5;
        db.vertex_type_ubyte4 = 6;
        db.layerelementtype_undefined = 0;
        db.layerelementtype_background = 1;
        db.layerelementtype_instance = 2;
        db.layerelementtype_oldtilemap = 3;
        db.layerelementtype_sprite = 4;
        db.layerelementtype_tilemap = 5;
        db.layerelementtype_particlesystem = 6;
        db.layerelementtype_tile = 7;
        db.layerelementtype_sequence = 8;
        db.tile_rotate = 1073741824;
        db.tile_flip = 536870912;
        db.tile_mirror = 268435456;
        db.tile_index_mask = 524287;
        db.kbv_type_default = 0;
        db.kbv_type_ascii = 1;
        db.kbv_type_url = 2;
        db.kbv_type_email = 3;
        db.kbv_type_numbers = 4;
        db.kbv_type_phone = 5;
        db.kbv_type_phone_name = 6;
        db.kbv_returnkey_default = 0;
        db.kbv_returnkey_go = 1;
        db.kbv_returnkey_google = 2;
        db.kbv_returnkey_join = 3;
        db.kbv_returnkey_next = 4;
        db.kbv_returnkey_route = 5;
        db.kbv_returnkey_search = 6;
        db.kbv_returnkey_send = 7;
        db.kbv_returnkey_yahoo = 8;
        db.kbv_returnkey_done = 9;
        db.kbv_returnkey_continue = 10;
        db.kbv_returnkey_emergency = 11;
        db.kbv_autocapitalize_none = 0;
        db.kbv_autocapitalize_words = 1;
        db.kbv_autocapitalize_sentences = 2;
        db.kbv_autocapitalize_characters = 3;
        db.os_permission_denied_dont_request = -1;
        db.os_permission_denied = 0;
        db.os_permission_granted = 1;
        db.nineslice_left = 0;
        db.nineslice_top = 1;
        db.nineslice_right = 2;
        db.nineslice_bottom = 3;
        db.nineslice_centre = 4;
        db.nineslice_center = 4;
        db.nineslice_stretch = 0;
        db.nineslice_repeat = 1;
        db.nineslice_mirror = 2;
        db.nineslice_blank = 3;
        db.nineslice_hide = 4;
        db.texturegroup_status_unloaded = 0;
        db.texturegroup_status_loading = 1;
        db.texturegroup_status_loaded = 2;
        db.texturegroup_status_fetched = 3;
        db.seqtracktype_graphic = 1;
        db.seqtracktype_audio = 2;
        db.seqtracktype_real = 3;
        db.seqtracktype_color = 4;
        db.seqtracktype_colour = 4;
        db.seqtracktype_bool = 5;
        db.seqtracktype_string = 6;
        db.seqtracktype_sequence = 7;
        db.seqtracktype_clipmask = 8;
        db.seqtracktype_clipmask_mask = 9;
        db.seqtracktype_clipmask_subject = 10;
        db.seqtracktype_group = 11;
        db.seqtracktype_empty = 12;
        db.seqtracktype_spriteframes = 13;
        db.seqtracktype_instance = 14;
        db.seqtracktype_message = 15;
        db.seqtracktype_moment = 16;
        db.seqtracktype_text = 17;
        db.seqplay_oneshot = 0;
        db.seqplay_loop = 1;
        db.seqplay_pingpong = 2;
        db.seqdir_right = 1;
        db.seqdir_left = -1;
        db.seqinterpolation_assign = 0;
        db.seqinterpolation_lerp = 1;
        db.seqaudiokey_loop = 0;
        db.seqaudiokey_oneshot = 1;
        db.seqtextkey_left = 0;
        db.seqtextkey_center = 1;
        db.seqtextkey_right = 2;
        db.seqtextkey_justify = 3;
        db.seqtextkey_top = 0;
        db.seqtextkey_middle = 1;
        db.seqtextkey_bottom = 2;
        db.animcurvetype_linear = 0;
        db.animcurvetype_catmullrom = 1;
        db.animcurvetype_bezier = 2;
        db.time_source_global = 0;
        db.time_source_game = 1;
        db.time_source_units_seconds = 0;
        db.time_source_units_frames = 1;
        db.time_source_expire_nearest = 0;
        db.time_source_expire_after = 1;
        db.time_source_state_initial = 0;
        db.time_source_state_active = 1;
        db.time_source_state_paused = 2;
        db.time_source_state_stopped = 3;
        db.room_speed_get = method(undefined, function()
        {
            return room_speed;
        });
        db.fps_get = method(undefined, function()
        {
            return fps;
        });
        db.fps_real_get = method(undefined, function()
        {
            return fps_real;
        });
        db.current_time_get = method(undefined, function()
        {
            return current_time;
        });
        db.current_year_get = method(undefined, function()
        {
            return current_year;
        });
        db.current_month_get = method(undefined, function()
        {
            return current_month;
        });
        db.current_day_get = method(undefined, function()
        {
            return current_day;
        });
        db.current_weekday_get = method(undefined, function()
        {
            return current_weekday;
        });
        db.current_hour_get = method(undefined, function()
        {
            return current_hour;
        });
        db.current_minute_get = method(undefined, function()
        {
            return current_minute;
        });
        db.current_second_get = method(undefined, function()
        {
            return current_second;
        });
        db.room_get = method(undefined, function()
        {
            return room;
        });
        db.room_first_get = method(undefined, function()
        {
            return room_first;
        });
        db.room_last_get = method(undefined, function()
        {
            return room_last;
        });
        db.room_width_get = method(undefined, function()
        {
            return room_width;
        });
        db.room_height_get = method(undefined, function()
        {
            return room_height;
        });
        db.room_persistent_get = method(undefined, function()
        {
            return room_persistent;
        });
        db.score_get = method(undefined, function()
        {
            return score;
        });
        db.lives_get = method(undefined, function()
        {
            return lives;
        });
        db.health_get = method(undefined, function()
        {
            return health;
        });
        db.event_type_get = method(undefined, function()
        {
            return event_type;
        });
        db.event_number_get = method(undefined, function()
        {
            return event_number;
        });
        db.event_object_get = method(undefined, function()
        {
            return event_object;
        });
        db.event_action_get = method(undefined, function()
        {
            return event_action;
        });
        db.application_surface_get = method(undefined, function()
        {
            return application_surface;
        });
        db.debug_mode_get = method(undefined, function()
        {
            return debug_mode;
        });
        db.font_texture_page_size_get = method(undefined, function()
        {
            return font_texture_page_size;
        });
        db.keyboard_key_get = method(undefined, function()
        {
            return keyboard_key;
        });
        db.keyboard_lastkey_get = method(undefined, function()
        {
            return keyboard_lastkey;
        });
        db.keyboard_lastchar_get = method(undefined, function()
        {
            return keyboard_lastchar;
        });
        db.keyboard_string_get = method(undefined, function()
        {
            return keyboard_string;
        });
        db.mouse_x_get = method(undefined, function()
        {
            return mouse_x;
        });
        db.mouse_y_get = method(undefined, function()
        {
            return mouse_y;
        });
        db.mouse_button_get = method(undefined, function()
        {
            return mouse_button;
        });
        db.mouse_lastbutton_get = method(undefined, function()
        {
            return mouse_lastbutton;
        });
        db.cursor_sprite_get = method(undefined, function()
        {
            return cursor_sprite;
        });
        db.background_colour_get = method(undefined, function()
        {
            return background_colour;
        });
        db.background_showcolour_get = method(undefined, function()
        {
            return background_showcolour;
        });
        db.background_color_get = method(undefined, function()
        {
            return background_color;
        });
        db.background_showcolor_get = method(undefined, function()
        {
            return background_showcolor;
        });
        db.view_enabled_get = method(undefined, function()
        {
            return view_enabled;
        });
        db.view_current_get = method(undefined, function()
        {
            return view_current;
        });
        db.view_visible_get = method(undefined, function()
        {
            return view_visible;
        });
        db.view_xport_get = method(undefined, function()
        {
            return view_xport;
        });
        db.view_yport_get = method(undefined, function()
        {
            return view_yport;
        });
        db.view_wport_get = method(undefined, function()
        {
            return view_wport;
        });
        db.view_hport_get = method(undefined, function()
        {
            return view_hport;
        });
        db.view_surface_id_get = method(undefined, function()
        {
            return view_surface_id;
        });
        db.view_camera_get = method(undefined, function()
        {
            return view_camera;
        });
        db.game_id_get = method(undefined, function()
        {
            return game_id;
        });
        db.game_display_name_get = method(undefined, function()
        {
            return game_display_name;
        });
        db.game_project_name_get = method(undefined, function()
        {
            return game_project_name;
        });
        db.game_save_id_get = method(undefined, function()
        {
            return game_save_id;
        });
        db.working_directory_get = method(undefined, function()
        {
            return working_directory;
        });
        db.temp_directory_get = method(undefined, function()
        {
            return temp_directory;
        });
        db.program_directory_get = method(undefined, function()
        {
            return program_directory;
        });
        db.browser_width_get = method(undefined, function()
        {
            return browser_width;
        });
        db.browser_height_get = method(undefined, function()
        {
            return browser_height;
        });
        db.os_type_get = method(undefined, function()
        {
            return 0;
        });
        db.os_device_get = method(undefined, function()
        {
            return os_device;
        });
        db.os_browser_get = method(undefined, function()
        {
            return -1;
        });
        db.os_version_get = method(undefined, function()
        {
            return os_version;
        });
        db.display_aa_get = method(undefined, function()
        {
            return display_aa;
        });
        db.async_load_get = method(undefined, function()
        {
            return async_load;
        });
        db.delta_time_get = method(undefined, function()
        {
            return delta_time;
        });
        db.webgl_enabled_get = method(undefined, function()
        {
            return webgl_enabled;
        });
        db.event_data_get = method(undefined, function()
        {
            return event_data;
        });
        db.iap_data_get = method(undefined, function()
        {
            return iap_data;
        });
        db.room_speed_set = method(undefined, function(arg0)
        {
            room_speed = arg0;
        });
        db.room_set = method(undefined, function(arg0)
        {
            room = arg0;
        });
        db.room_persistent_set = method(undefined, function(arg0)
        {
            room_persistent = arg0;
        });
        db.score_set = method(undefined, function(arg0)
        {
            score = arg0;
        });
        db.lives_set = method(undefined, function(arg0)
        {
            lives = arg0;
        });
        db.health_set = method(undefined, function(arg0)
        {
            health = arg0;
        });
        db.font_texture_page_size_set = method(undefined, function(arg0)
        {
            font_texture_page_size = arg0;
        });
        db.keyboard_key_set = method(undefined, function(arg0)
        {
            keyboard_key = arg0;
        });
        db.keyboard_lastkey_set = method(undefined, function(arg0)
        {
            keyboard_lastkey = arg0;
        });
        db.keyboard_lastchar_set = method(undefined, function(arg0)
        {
            keyboard_lastchar = arg0;
        });
        db.keyboard_string_set = method(undefined, function(arg0)
        {
            keyboard_string = arg0;
        });
        db.mouse_button_set = method(undefined, function(arg0)
        {
            mouse_button = arg0;
        });
        db.mouse_lastbutton_set = method(undefined, function(arg0)
        {
            mouse_lastbutton = arg0;
        });
        db.cursor_sprite_set = method(undefined, function(arg0)
        {
            cursor_sprite = arg0;
        });
        db.background_colour_set = method(undefined, function(arg0)
        {
            background_colour = arg0;
        });
        db.background_showcolour_set = method(undefined, function(arg0)
        {
            background_showcolour = arg0;
        });
        db.background_color_set = method(undefined, function(arg0)
        {
            background_color = arg0;
        });
        db.background_showcolor_set = method(undefined, function(arg0)
        {
            background_showcolor = arg0;
        });
        db.view_enabled_set = method(undefined, function(arg0)
        {
            view_enabled = arg0;
        });
        db.view_visible_set = method(undefined, function(arg0)
        {
            view_visible = arg0;
        });
        db.view_xport_set = method(undefined, function(arg0)
        {
            view_xport = arg0;
        });
        db.view_yport_set = method(undefined, function(arg0)
        {
            view_yport = arg0;
        });
        db.view_wport_set = method(undefined, function(arg0)
        {
            view_wport = arg0;
        });
        db.view_hport_set = method(undefined, function(arg0)
        {
            view_hport = arg0;
        });
        db.view_surface_id_set = method(undefined, function(arg0)
        {
            view_surface_id = arg0;
        });
        db.view_camera_set = method(undefined, function(arg0)
        {
            view_camera = arg0;
        });
    }
    
    return db;
}
